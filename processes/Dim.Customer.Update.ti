#region Prolog

#****Begin: Generated Statements***
#****End: Generated Statements****

#LASTCHANGE Inel Peacock, 2014-11-18, Initial set up of process
#GENERALCOMMENT Update Product Dimension
#DATASOURCECOMMENT CSV file
#PROLOGCOMMENT Update Account Dimension
#METADATACOMMENT N/A
#DATACOMMENT N/A
#EPILOGCOMMENT N/A

#################################
## Define variables                                         ##
#################################

sDimName = 'Customer' ;
sTopConsol = 'Customer Consolidations' ;
sReportConsol = 'Reporting' ;
sSysConsol = 'System' ;
sAllConsol = 'All Customers' ;
sUnspecProd = 'Unspec Customer' ;
sNoProd = 'No Customer' ;
sToAllocate = 'All ' | sDimName |' Codes';
sInputConsol = 'All Inputs' ;

sCatAttr = 'Customer category' ;
sAliasAttr = 'Code and Description' ;

# Hierarchy Attibutes required
sWeightPrefix = 'Weight_';
sHierarchyPrefix = 'Hierarchy_';

sTopHierarchyAttr = sHierarchyPrefix | sAllConsol;
sTopWeightAttr = sWeightPrefix | sAllConsol;


#########################################################
## Disable cube logging for bulk data loads - performance improvements              ##
#########################################################
sCube = '}ElementAttributes_Customer';
sCubeLogging = CubeGetLogChanges(sCube);
CubeSetLogChanges(sCube, 0);

##################################
## Unwind to be allocated Consolidation          ##
##################################
If(DimIx(sDimName, sToAllocate) > 0);
  sProcessName = '}CTK_DisconnectConsolidations';
  ExecuteProcess(sProcessName, 'pDimName', sDimName, 'pConsolidation', sToAllocate);
EndIf;

##########################################
## Insert Attributes                                                               ##
##########################################
sProcessName = '}CTK_CreateAttributes';
ExecuteProcess(sProcessName,'pDimName',sDimName);

# Insert Hierarchy Attributes Required
AttrInsert(sDimName,'', sTopHierarchyAttr,'S');
AttrInsert(sDimName,'', sTopWeightAttr,'N');
AttrInsert(sDimName,'',sCatAttr,'S');


####################################################
## Add system elements into dimension and hierarchy                                 ##
####################################################
# All Customer Consolidations consolidations
If (Dimix (sDimName, sTopConsol)=0);
  DimensionElementInsertDirect (sDimName, '', sTopConsol, 'C');
EndIf ;

# Reporting Consolidation
If (Dimix (sDimName, sReportConsol)=0);
  DimensionElementInsertDirect (sDimName, '', sReportConsol, 'C');
EndIf ;

DimensionElementComponentAdd (sDimName, sTopConsol, sReportConsol, 0);

# System Consolidation
If (Dimix (sDimName, sSYSConsol)=0);
  DimensionElementInsertDirect (sDimName, '', sSysConsol, 'C');
EndIf ;

DimensionElementComponentAdd (sDimName, sTopConsol, sSysConsol, 0);

# All Customers Consolidation
If (Dimix (sDimName, sAllConsol)=0);
  DimensionElementInsertDirect (sDimName, '', sAllConsol, 'C');
EndIf ;

DimensionElementComponentAdd (sDimName, sReportConsol, sAllConsol, 0) ;

# Unspec Element
If (Dimix (sDimName, sUnspecProd)=0);
  DimensionElementInsertDirect (sDimName, '', sUnspecProd, 'N');
EndIf ;

DimensionElementComponentAdd (sDimName, sAllConsol, sUnspecProd, 1);

# No Product Element
If (Dimix (sDimName, sNoProd)=0);
  DimensionElementInsertDirect (sDimName, '', sNoProd, 'N');
EndIf ;

DimensionElementComponentAdd (sDimName, sSysConsol, sNoProd, 1);

# All Customer Codes consolidation
If (Dimix (sDimName, sToAllocate) =0 );
  DimensionElementInsertDirect(sDimName,'',sToAllocate,'C');
Endif;

DimensionElementComponentAddDirect(sDimName,sSysConsol,sToAllocate,1);

# All Inputs consolidation
If (Dimix (sDimName, sInputConsol) =0 );
  DimensionElementInsertDirect(sDimName,'',sInputConsol,'C');
Endif;

DimensionElementComponentAddDirect(sDimName,sSysConsol,sInputConsol,1);
#endregion
#region Metadata

#****Begin: Generated Statements***
#****End: Generated Statements****

######################################
## Define variables                                                     ##
######################################

#Category inputs for assumptions to be entered against
sInputCat = vCustomerCat | '.Input' ;

######################################
## Insert Element and connnect to parent                  ##
######################################

If(DimIx(sDimName, vCustomer) = 0);
  DimensionElementInsert(sDimName,'',vCustomer,'N');
EndIf;

DimensionElementComponentAdd(sDimName,sToAllocate,vCustomer,1);

If(DimIx(sDimName, sInputCat) = 0);
  DimensionElementInsert(sDimName,'',sInputCat,'N');
EndIf;

DimensionElementComponentAdd(sDimName,sInputConsol,sInputCat,1);
#endregion
#region Data

#****Begin: Generated Statements***
#****End: Generated Statements****

#################################
## Insert Attributes                                          ##
#################################
# Generic Aliases etc
AttrPutS(vCustomerCat, sDimName, vCustomer, sCatAttr) ;

# Hierarchy Attributes
AttrPutS(vCustomerCat , sDimName, vCustomer, sTopHierarchyAttr);
AttrPutN(0, sDimName, vCustomer, sTopWeightAttr);

# Alias values 
sInputCat = vCustomerCat | '.Input' ;
sCodeDesc = vCustomerCat | ' (Category)' ;
AttrPutS (sCodeDesc, sDimName, sInputCat, sAliasAttr) ;

#endregion
#region Epilog

#****Begin: Generated Statements***
#****End: Generated Statements****

################################
## Rebuild Hierarchy                                    ##
################################
sProcessName = 'Dim.Generic.Hierarchy';
ExecuteProcess(sProcessName,'pDimName',sDimName, 'pHierarchy', sTopHierarchyAttr);

################################
## Delete any empty consolidations             ##
################################
sProcessName = '}CTK_EmptyConsolidationsDelete';
ExecuteProcess(sProcessName,'pDimName',sDimName);


###########################################################
## Check for Orphan elements and add them to a orphan elements consolidation      ##
###########################################################
sProcessName = '}CTK_CheckOrphanElements';
ExecuteProcess(sProcessName,'pDimName',sDimName);


################################
## Set cube logging to original value            ##
################################
CubeSetLogChanges(sCube, sCubeLogging);
#endregion