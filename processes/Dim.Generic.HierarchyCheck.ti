#region Prolog

#****Begin: Generated Statements***
#****End: Generated Statements****

#LASTCHANGE Louise Davenport 23-Sep-2014 Changes to ensure disconnect occuring
#LASTCHANGE Louise Davenport 10-Sep-2014 Changes for specific treatement for CF heirarchies
#LASTCHANGE Louise Davenport 27-May-2014 Initial Build of Process
#GENERALCOMMENT Checks whether elements in the "All [Dimension Name] Codes" Consolidation
#GENERALCOMMENT exist under a particular Hierarchy and if not adds them to the "Hierarchy_Unallocated"
#GENERALCOMMENT consolidation under System. Some exclusions may be valid but there for information purposes.
#DATASOURCECOMMENT N/A
#PROLOGCOMMENT Defines Variables, Loops though checking elements and adds them to the consolidation
#METADATACOMMENT N/A
#DATACOMMENT N/A
#EPILOGCOMMENT N/A 


########################
## Define Variables                    ##
########################
sDimName = pDimName;
# pHierarchy if entered to be in form of 'Hierarchy_xxx'
sHierarchy = pHierarchy;
sUnallocatedPrefix = 'Unallocated_';
sSysConsol = 'System';

sAllConsol = 'All ' | pDimName |' Codes';
sElementAttributepDimName = '}ElementAttributes_' | sDimName;
sDisconnectProcessName = '}CTK_DisconnectConsolidations';
sHierarchyAttr = 'Hierarchy_' | sHierarchy;
sCFConsol = 'Cash Flow';
sRecOpCFConsol = 'OpCFReconciliation';
sTypeAttr = 'Type';
sCYFlag = 'CY';
sOpCFConsol = 'Net Cash Flows from Operating Activities';

sBSConsol = 'Balance Sheet';
sPLConsol = 'Profit and Loss';
sBSFlag = 'BS';
sPLFlag = 'PL';
sAcctAttr = 'Account Flag';

s_Type = '';
s_AcctType = '';


##########################
## Validate Parameters                   ##
##########################
sDimCheck = DIMIX('}Dimensions',sDimName);
If(sDimCheck = 0);
  ItemReject('Dimension is invalid');
  ProcessBreak;
EndIf;

If(sHierarchy@<>'');
  sHieCheckDim = '}ElementAttributes_' | sDimName;
  sHieCheck = DIMIX(sHieCheckDim,sHierarchy);
  If(sHieCheck = 0);
    ItemReject('Consolidation is invalid');
    ProcessBreak;
  EndIf;

  sHieCheck2 = DIMIX('}Dimensions',sDimName);
  If(SubSt(sHierarchy,1,10) @<>'Hierarchy_');
    ItemReject('Include the full element name e.g. Hierarchy_');
    ProcessBreak;
  EndIf;

EndIf;


#####################################
## Loop throught elements to check                        ##
#####################################
# If Hierarchy Unspecified
If(sHierarchy @= '');
  # Need to Loop Through the Different Hierarchies
  n_HierCtrl = 1;
  n_HierMax = DimSiz(sElementAttributepDimName);
  While(n_HierCtrl <= n_HierMax);
    sAttributeName = DimNm(sElementAttributepDimName, n_HierCtrl);
    If(SubSt(sAttributeName,1,10) @= 'Hierarchy_');
      sHierarchyConsol = Subst(sAttributeName, 11, Long(sAttributeName) - 10);
      sUnallocatedConsol = sUnallocatedPrefix | sHierarchyConsol;

      # If Already Exists, then if there are elements under it disconnect the elements from it
      If(DimIx(sDimName, sUnallocatedConsol) > 0);
        If(ElCompN(sDimName, sUnallocatedConsol) > 0);
          ExecuteProcess(sDisconnectProcessName, 'pDimName', sDimName, 'pConsolidation', sUnallocatedConsol);
        EndIf;
      Else;
      # Add The Unallocated Consolidation
         DimensionElementInsertDirect(sDimName,'',sUnallocatedConsol,'C');
         DimensionElementComponentAddDirect(sDimName,sSysConsol, sUnallocatedConsol ,0);
      EndIf;

    n_LoopCtrl = 1;
    # Loop Through All elements under All Codes consol
    n_LoopMax = ElCompN(sDimName, sAllConsol);


      While(n_LoopCtrl <= n_LoopMax);
        sElement = ElComp(sDimName, sAllConsol, n_LoopCtrl);
       If(sElement @<> '' & sDimName @= 'Account');
          s_Type = AttrS(sDimName, sElement, sTypeAttr);
          s_AcctType = AttrS(sDimName, sElement, sAcctAttr);
       EndIf;

        # Check whether the Element exists in the consolidation
          # Add the Element to the Unallocated Consol
        If(ElIsAnc(sDimName, sHierarchyConsol, sElement) = 0);
 
          # Special treatment for Cashflow and Operating CF Reconciliation
          # If looking at the Cashflow hierarchy exclude Current Year Earnings
          If(sHierarchyConsol @= sCFConsol);
            If(s_Type @<> sCYFlag & sElement@<>'Unspec Account');
              DimensionElementComponentAddDirect(sDimName,sUnallocatedConsol, sElement ,1);
            EndIf;
          ElseIf(sHierarchyConsol @= sBSConsol);
            If(s_AcctType @= sBSFlag % s_Type @= sCYFlag);
              DimensionElementComponentAddDirect(sDimName,sUnallocatedConsol, sElement ,1);
            EndIf;
          ElseIf(sHierarchyConsol @= sPLConsol);
            If(s_AcctType @= sPLFlag);
              DimensionElementComponentAddDirect(sDimName,sUnallocatedConsol, sElement ,1);
            EndIf;
          # If looking at the REconciliation to Operating CF then only check the Operating CF Consolidation
          ElseIf(sHierarchyConsol @= sRecOpCFConsol);
            If(ElIsAnc(sDimName, sOpCFConsol, sElement) = 1);           
              DimensionElementComponentAddDirect(sDimName,sUnallocatedConsol, sElement ,1);
            EndIf;
          Else;
            DimensionElementComponentAddDirect(sDimName,sUnallocatedConsol, sElement ,1);
          EndIf; 
        EndIf;

        n_LoopCtrl = n_LoopCtrl + 1;
      End;

    EndIf;
   
    n_HierCtrl = n_HierCtrl + 1;
  End;

# If the Hierarchy is Specified:
Else;
  sHierarchyConsol =  Subst(sHierarchy, 11, Long(sHierarchy) - 10);
  sUnallocatedConsol = sUnallocatedPrefix | sHierarchyConsol;

  If(DimIx(sDimName,  sUnallocatedConsol) > 0 );
   If(ElCompN(sDimName, sUnallocatedConsol) > 0);
     ExecuteProcess(sDisconnectProcessName, 'pDimName', sDimName, 'pConsolidation', sUnallocatedConsol);
    EndIf;
  Else;
    DimensionElementInsertDirect(sDimName,'',sUnallocatedConsol,'C');
    DimensionElementComponentAddDirect(sDimName,sSysConsol, sUnallocatedConsol ,0);
  EndIf;

  While(n_LoopCtrl <= n_LoopMax);
    sElement = ElComp(sDimName, sAllConsol, n_LoopCtrl);
    If(sElement @<> '' & sDimName @= 'Account');
      s_Type = AttrS(sDimName, sElement, sTypeAttr);
      s_AcctType = AttrS(sDimName, sElement, sAcctAttr);
    EndIf;

    # Check whether the Element exists in the consolidation
    If(ElIsAnc(sDimName, sHierarchyConsol, sElement) = 0);

      # Add the Element to the Unallocated Consol

      # Special treatment for Cashflow and Operating CF Reconciliation
      # If looking at the Cashflow hierarchy exclude Current Year Earnings
      If(sHierarchyConsol @= sCFConsol);
        If(s_Type @<> sCYFlag);
          DimensionElementComponentAdd(sDimName,sUnallocatedConsol, sElement ,1);
        EndIf;
      ElseIf(sHierarchyConsol @= sBSConsol);
        If(s_AcctType @= sBSFlag % s_Type @= sCYFlag);
          DimensionElementComponentAddDirect(sDimName,sUnallocatedConsol, sElement ,1);
        EndIf;
      ElseIf(sHierarchyConsol @= sPLConsol);
        If(s_AcctType @= sPLFlag);
          DimensionElementComponentAddDirect(sDimName,sUnallocatedConsol, sElement ,1);
        EndIf;
      # If looking at the REconciliation to Operating CF then only check the Operating CF Consolidation
      ElseIf(sHierarchyConsol @= sRecOpCFConsol);
        If(ElIsAnc(sDimName, sOpCFConsol, sElement) = 1);
          DimensionElementComponentAddDirect(sDimName,sUnallocatedConsol, sElement ,1);
        EndIf;
      Else;
        DimensionElementComponentAddDirect(sDimName,sUnallocatedConsol, sElement ,1);
      EndIf; 
    EndIf;
    
    n_LoopCtrl = n_LoopCtrl + 1;
  End;

EndIf;
#endregion
#region Metadata

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Data

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Epilog

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion