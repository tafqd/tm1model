#region Prolog

#****Begin: Generated Statements***
#****End: Generated Statements****

#LASTCHANGE Inel Peacock 9-Dec-14, adapted Cost Centre process for Activity dimension
#LASTCHANGE Louise Davenport 9-Sep-2014 Ensure Process works as required
#LASTCHANGE Louise Davenport 27-May-2014 Clean up
#LASTCHANGE Peter Currie Update SourceFile
#GENERALCOMMENT Update Cost Centre Dimension
#DATASOURCECOMMENT CSV
#PROLOGCOMMENT Update Cost Centre Dimension
#METADATACOMMENT N/A
#DATACOMMENT N/A
#EPILOGCOMMENT N/A


##################################
## Set Constants and Variables                         ##
##################################
cDimName = 'Activity';

sCodeDescAttr = 'Code and Description';
sDescCodeAttr = 'Description and Code';
sDescAttr = 'Description';

sBIPromptAttr = 'PromptValue' ;

sAllConsol = cDimName | ' Consolidations';
sRepConsol = 'Reporting';
sSysConsol = 'System';
sTopConsol = 'All Activities';
sUnspecActivity = 'Unspec Activity';
sNoActivity = 'No Activity';
sToAllocate = 'All ' | cDimName |' Codes';

# Hierarchy Attibutes required
s_WeightPrefix = 'Weight_';
s_HierarchyPrefix = 'Hierarchy_';

s_TopHierarchyAttr = s_HierarchyPrefix | sTopConsol;
s_TopWeightAttr = s_WeightPrefix | sTopConsol;


#########################################################
## Disable cube logging for bulk data loads - performance improvements              ##
#########################################################
cCube = '}ElementAttributes_Activity';
cCubeLogging = CubeGetLogChanges(cCube);
CubeSetLogChanges(cCube, 0);


##################################
## Unwind to be allocated Consolidation          ##
##################################
If(DimIx(cDimName, sToAllocate) > 0);
  sProcessName = '}CTK_DisconnectConsolidations';
  ExecuteProcess(sProcessName, 'pDimName', cDimName, 'pConsolidation', sToAllocate);
EndIf;


#ProcessQuit;

##########################################
## Insert Attributes                                                               ##
##########################################
# Generic Attributes (Code & Description etc)
sProcessName = '}CTK_CreateAttributes';
ExecuteProcess(sProcessName,'pDimName',cDimName);

# Insert Hierarchy Attributes Required
AttrInsert(cDimName,'', s_TopHierarchyAttr,'S');
AttrInsert(cDimName,'', s_TopWeightAttr,'N');

AttrInsert(cDimName,'', sBIPromptAttr,'N');

###########################################
## Insert System / Top level Elements                                   ##
###########################################
DimensionElementInsertDirect(cDimName,'',sAllConsol,'C');
DimensionElementInsertDirect(cDimName,'',sRepConsol,'C');
DimensionElementInsertDirect(cDimName,'',sSysConsol,'C');
DimensionElementInsertDirect(cDimName,'',sToAllocate,'C');

DimensionElementComponentAddDirect(cDimName,sAllConsol,sRepConsol,1);
DimensionElementComponentAddDirect(cDimName,sAllConsol,sSysConsol,1);

DimensionElementInsertDirect(cDimName,'',sTopConsol,'C');
DimensionElementComponentAddDirect(cDimName,sRepConsol,sTopConsol,0);

DimensionElementInsertDirect(cDimName,'',sUnspecActivity,'N');
DimensionElementComponentAddDirect(cDimName,sTopConsol,sUnspecActivity,1);
DimensionElementComponentAddDirect(cDimName,sToAllocate,sUnspecActivity,1);

DimensionElementInsertDirect(cDimName,'',sNoActivity,'N');
DimensionElementComponentAddDirect(cDimName,sSysConsol,sNoActivity,1);

DimensionElementInsertDirect(cDimName,'',sToAllocate,'C');
DimensionElementComponentAddDirect(cDimName,sSysConsol,sToAllocate,1);

#endregion
#region Metadata

#****Begin: Generated Statements***
#****End: Generated Statements****

###############################
## Set variables                                          ##
###############################
sActivity = vActivityID;

######################################
## Insert Element and connnect to parent                  ##
######################################
If(DimIx(cDimName, sActivity) = 0);
  DimensionElementInsert(cDimName,'',sActivity,'N');
EndIf;
DimensionElementComponentAdd(cDimName,sToAllocate,sActivity,1);
#endregion
#region Data

#****Begin: Generated Statements***
#****End: Generated Statements****

################################
## Set variables                                            ##
################################
sActivity = vActivityID;
sActivity_Alias = vActivityAlias;

sCodeDesc = sActivity | ' - ' | sActivity_Alias;
sDescCode = sActivity_Alias | ' - ' | sActivity;
sDesc = sActivity_Alias;


#################################
## Insert Attributes                                          ##
#################################
# Generic Aliases etc
AttrPutS(sCodeDesc, cDimName, sActivity, sCodeDescAttr);
AttrPutS(sDescCode, cDimName, sActivity, sDescCodeAttr);
AttrPutS(sDesc, cDimName, sActivity, sDescAttr);

# Hierarchy Attributes - Put Reporting Against Top Consol
AttrPutS(sRepConsol , cDimName, sTopConsol, s_TopHierarchyAttr);
AttrPutN(0, cDimName, sTopConsol, s_TopWeightAttr);

AttrPutS(sTopConsol, cDimName, sUnspecActivity, s_TopHierarchyAttr);
AttrPutN(1, cDimName, sUnspecActivity, s_TopWeightAttr);




#endregion
#region Epilog

#****Begin: Generated Statements***
#****End: Generated Statements****


################################
## Rebuild Hierarchy                                    ##
################################
sProcessName = 'Dim.Generic.Hierarchy';
ExecuteProcess(sProcessName,'pDimName',cDimName,  'pHierarchy', s_TopHierarchyAttr);


################################
## Delete any empty consolidations             ##
################################
sProcessName = '}CTK_EmptyConsolidationsDelete';
ExecuteProcess(sProcessName,'pDimName',cDimName);


###########################################################
## Check for Orphan elements and add them to a orphan elements consolidation      ##
###########################################################
sProcessName = '}CTK_CheckOrphanElements';
ExecuteProcess(sProcessName,'pDimName',cDimName);


################################
## Set cube logging to original value            ##
################################
CubeSetLogChanges(cCube, cCubeLogging);
#endregion