#region Prolog

#****Begin: Generated Statements***
#****End: Generated Statements****


#LASTCHANGE Louise Davenport 27-May-2014 Clean up of process
#LASTCHANGE Peter Currie Initial Draft of process
#GENERALCOMMENT Update Account Dimension
#DATASOURCECOMMENT CSV
#PROLOGCOMMENT Update Account Dimension
#METADATACOMMENT N/A
#DATACOMMENT N/A
#EPILOGCOMMENT N/A

#################################
## Set Constants and Variables                      ##
#################################
cDimName = 'Account';
sWeightAttr = 'Weighting';
sFlagAttr = 'AccountFlag';
sDRCRAttr = 'DebitCreditFlag';
sGSTAttr = 'GSTFlag';

sCodeDescAttr = 'Code and Description';
sDescCodeAttr = 'Description and Code';
sDescAttr = 'Description';

sAllConsol = cDimName | ' Consolidations';
sRepConsol = 'Reporting';
sSysConsol = 'SYSTEM';
sPLConsol = 'Profit and Loss';
sBSConsol = 'Balance Sheet';
sCFConsol = 'Cash Flow';
sOpCFConsol = 'OpCFReconciliation';
sUnspecAcct = 'Unspec Account';
sNoAcct = 'No Account';
sToAllocate = 'All ' | cDimName |' Codes';
sActualsAcct = 'Month contains actuals' ;

# Hierarchy Attibutes required
s_WeightPrefix = 'Weight_';
s_HierarchyPrefix = 'Hierarchy_';

s_PLHierarchyAttr = s_HierarchyPrefix | sPLConsol;
s_PLWeightAttr = s_WeightPrefix | sPLConsol;

s_BSHierarchyAttr = s_HierarchyPrefix | sBSConsol;
s_BSWeightAttr = s_WeightPrefix | sBSConsol;

s_CFHierarchyAttr = s_HierarchyPrefix | sCFConsol;
s_CFWeightAttr = s_WeightPrefix | sCFConsol;

s_OpCFHierarchyAttr = s_HierarchyPrefix | sOpCFConsol;
s_OpCFWeightAttr = s_WeightPrefix | sOpCFConsol;


#################################
## Disable cube logging for bulk data loads   ##
#################################
cCube = '}ElementAttributes_Account';
cCubeLogging = CubeGetLogChanges(cCube);
CubeSetLogChanges(cCube, 0);


#################################
## Insert Attributes                                          ##
#################################
# Execute Process to create standard attributes
sProcessName = '}CTK_CreateAttributes';
ExecuteProcess(sProcessName);
# Insert Account Specific Attributes
AttrInsert(cDimName,'', sWeightAttr,'S');
AttrInsert(cDimName,'', sFlagAttr,'S');
AttrInsert(cDimName,'', sDRCRAttr ,'S');
AttrInsert(cDimName,'', sGSTAttr,'S');

# Insert Hierarchy Attributes Required
AttrInsert(cDimName,'', s_PLHierarchyAttr,'S');
AttrInsert(cDimName,'', s_PLWeightAttr,'N');

AttrInsert(cDimName,'', s_BSHierarchyAttr,'S');
AttrInsert(cDimName,'', s_BSWeightAttr,'N');

AttrInsert(cDimName,'', s_CFHierarchyAttr,'S');
AttrInsert(cDimName,'', s_CFWeightAttr,'N');

AttrInsert(cDimName,'', s_OpCFHierarchyAttr,'S');
AttrInsert(cDimName,'', s_OpCFWeightAttr,'N');


##################################
## Unwind to be allocated Consolidation          ##
##################################
If(DimIx(cDimName, sToAllocate) > 0);
  sProcessName = '}CTK_DisconnectConsolidations';
  ExecuteProcess(sProcessName, 'pDimName', cDimName, 'pConsolidation', sToAllocate);
EndIf;


##################################
## Insert System / Top level Elements              ##
##################################
DimensionElementInsertDirect(cDimName,'',sAllConsol,'C');
DimensionElementInsertDirect(cDimName,'',sRepConsol,'C');
DimensionElementInsertDirect(cDimName,'',sSysConsol,'C');

DimensionElementComponentAdd(cDimName,sAllConsol,sRepConsol,1);
DimensionElementComponentAdd(cDimName,sAllConsol,sSysConsol,1);

DimensionElementInsertDirect(cDimName,'',sPLConsol,'C');
DimensionElementInsertDirect(cDimName,'',sBSConsol,'C');
DimensionElementInsertDirect(cDimName,'',sCFConsol,'C');
DimensionElementInsertDirect(cDimName,'',sOpCFConsol,'C');

DimensionElementComponentAdd(cDimName,sRepConsol,sPLConsol,1);
DimensionElementComponentAdd(cDimName,sRepConsol,sBSConsol,1);
DimensionElementComponentAdd(cDimName,sRepConsol,sCFConsol,1);
DimensionElementComponentAdd(cDimName,sRepConsol,sOpCFConsol,1);


DimensionElementInsertDirect(cDimName,'',sNoAcct,'N');
DimensionElementComponentAdd(cDimName,sSysConsol,sNoAcct,1);

DimensionElementInsertDirect(cDimName,'',sActualsAcct,'N');
DimensionElementComponentAdd(cDimName,sSysConsol,sActualsAcct,1);

DimensionElementInsertDirect(cDimName,'',sToAllocate,'C');
DimensionElementComponentAdd(cDimName,sSysConsol,sToAllocate,1);

DimensionElementInsertDirect(cDimName,'',sUnspecAcct,'N');
DimensionElementComponentAdd(cDimName,sToAllocate,sUnspecAcct,1);

#ProcessQuit;
#endregion
#region Metadata

#****Begin: Generated Statements***
#****End: Generated Statements****

##############################
## Set variables                                       ##
##############################
sAccount = vAccount;

# Determine Weightings
n_Weight = 1;

If(vDebitCredit @= 'CR');
  n_Weight = -1;
EndIf;


#############################################
## Insert Element and connnect to All Account Code Consol     ##
#############################################
If(DimIx(cDimName, sAccount) = 0);
  DimensionElementInsert(cDimName,'',sAccount,'N');
EndIf;
DimensionElementComponentAdd(cDimName,sToAllocate,sAccount,n_Weight);
#endregion
#region Data

#****Begin: Generated Statements***
#****End: Generated Statements****

###############################
## Set variables                                          ##
###############################
sAccount = vAccount;
sAccount_Alias = vDesc;
sCodeDesc = sAccount | ' - ' | sAccount_Alias;
sDescCode = sAccount_Alias | ' - ' | sAccount;
sDesc = sAccount_Alias;


######################################
## Insert Attributes                                                      ##
######################################
# Generic Attributes
AttrPutS(sCodeDesc, cDimName, sAccount, sCodeDescAttr);
AttrPutS(sDescCode, cDimName, sAccount, sDescCodeAttr);
AttrPutS(sDesc, cDimName, sAccount, sDescAttr);

# Specific Attributes
#AttrPutS(sAttribute5, cDimName, sAccount, sWeightAttr);
AttrPutS(vAccountFlag, cDimName, sAccount, sFlagAttr);
AttrPutS(vDebitCredit, cDimName, sAccount, sDRCRAttr);

# Hierarchy Attributes
AttrPutS(sRepConsol , cDimName, sPLConsol, s_PLHierarchyAttr);
AttrPutN(0, cDimName, sPLConsol, s_PLWeightAttr);

AttrPutS(sRepConsol , cDimName, sBSConsol, s_BSHierarchyAttr);
AttrPutN(0, cDimName, sBSConsol, s_BSWeightAttr);

AttrPutS(sRepConsol , cDimName, sCFConsol, s_CFHierarchyAttr);
AttrPutN(0, cDimName, sCFConsol, s_CFWeightAttr);

AttrPutS(sRepConsol , cDimName, sOpCFConsol, s_OpCFHierarchyAttr);
AttrPutN(0, cDimName, sOpCFConsol, s_OpCFWeightAttr);
#endregion
#region Epilog

#****Begin: Generated Statements***
#****End: Generated Statements****

################################
## Rebuild Hierarchy                                    ##
################################
sProcessName = 'Dim.Generic.Hierarchy';
ExecuteProcess(sProcessName,'pDimName',cDimName, 'pHierarchy', '');


###########################################################
## Check for Orphan elements and add them to a orphan elements consolidation      ##
###########################################################
sProcessName = '}CTK_CheckOrphanElements';
ExecuteProcess(sProcessName,'pDimName',cDimName);


################################
## Set cube logging to original value            ##
################################
CubeSetLogChanges(cCube, cCubeLogging);
#endregion