#region Prolog

#****Begin: Generated Statements***
#****End: Generated Statements****


#LASTCHANGE Louise Davenport 5-Jun-2014 
#LASTCHANGE Peter Currie Initial Draft of process
#GENERALCOMMENT Update PL Account Dimension
#DATASOURCECOMMENT NA
#PROLOGCOMMENT Call Replicate Consolidation Process
#METADATACOMMENT N/A
#DATACOMMENT N/A
#EPILOGCOMMENT N/A

# Set Constants
cSourceDim = 'Account';
cDestinationDim = 'PL Account';
sCubeName = 'PL' ;

# Disable cube logging for bulk data loads - performance improvements
cCube = '}ElementAttributes_Account';
cCubeLogging = CubeGetLogChanges(cCube);
CubeSetLogChanges(cCube, 0);

# Unravel the dimension (call external process)
sProcessName = '}CTK_DisconnectConsolidations';
ExecuteProcess(sProcessName,'pDimName',cDestinationDim,'pConsolidation',cDestinationDim | ' Consolidations');
#ExecuteProcess(sProcessName,'pDimName',cDestinationDim,'pConsolidation','Profit and Loss');

#ProcessQuit;

#Insert Attributes
# Insert Account Specific Attributes
sAttrName = 'Weighting';
AttrInsert(cDestinationDim,'', sAttrName,'S');
sAttrName = 'AccountFlag';
AttrInsert(cDestinationDim,'', sAttrName,'S');
sAttrName = 'DebitCreditFlag';
AttrInsert(cDestinationDim,'', sAttrName,'S');
sAttrName = 'GSTFlag';
AttrInsert(cDestinationDim,'', sAttrName,'S');
sAttrName = 'Inflation Override';
AttrInsert(cDestinationDim,'', sAttrName,'S');
sAttrName = 'Carry Forward';
AttrInsert(cDestinationDim,'', sAttrName,'S');
sAttrName = 'Source Cube';
AttrInsert(cDestinationDim,'', sAttrName,'S');
sAttrName = 'Default Phasing';
AttrInsert(cDestinationDim,'', sAttrName,'S');

#Insert System / Top level Elements
s1 = cDestinationDim | ' Consolidations';
sRep = 'Reporting';
sSys = 'System';

sTop1 = 'Profit and Loss';
sUnSpec = 'Unspec PL Account';
sNo = 'No PL Account';
sToAllocate = 'All ' | cDestinationDim |' Codes';
DimensionElementInsertDirect(cDestinationDim,'',s1,'C');
DimensionElementInsertDirect(cDestinationDim,'',sRep,'C');
DimensionElementInsertDirect(cDestinationDim,'',sSys,'C');

DimensionElementComponentAdd(cDestinationDim,s1,sRep,1);
DimensionElementComponentAdd(cDestinationDim,s1,sSys,1);

DimensionElementInsertDirect(cDestinationDim,'',sTop1,'C');
DimensionElementComponentAdd(cDestinationDim,sRep,sTop1,1);

DimensionElementInsertDirect(cDestinationDim,'',sUnSpec,'N');
DimensionElementInsertDirect(cDestinationDim,'',sNo,'N');
DimensionElementComponentAdd(cDestinationDim,sSys,sNo,1);

DimensionElementInsertDirect(cDestinationDim,'',sToAllocate,'C');
DimensionElementComponentAdd(cDestinationDim,sSys,sToAllocate,1);

DimensionElementComponentAdd(cDestinationDim,sToAllocate,sUnSpec,1);
#endregion
#region Metadata

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Data

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Epilog

#****Begin: Generated Statements***
#****End: Generated Statements****

# Call Replicate Consolidations Process
sProcessName = '}CTK_ReplicateConsolidationsGeneric';
ExecuteProcess(sProcessName,'pConsolidation',sTop1,'pSourceDim',cSourceDim,'pDestinationDim',cDestinationDim);

# Call Replicate Attributes Process
sProcessName = '}CTK_ReplicateAttributes';
ExecuteProcess(sProcessName,'pSourceDim',cSourceDim,'pDestinationDim',cDestinationDim);

# Delete any empty consolidations
sProcessName = '}CTK_EmptyConsolidationsDelete';
ExecuteProcess(sProcessName,'pDimName',cDestinationDim);

# Check for Orphan elements and add them to a orphan elements consolidation
sProcessName = '}CTK_CheckOrphanElements';
ExecuteProcess(sProcessName,'pDimName',cDestinationDim);

# Set cube logging to original value
CubeSetLogChanges(cCube, cCubeLogging);

# Reprocess the Feeders for the PL Cube
CubeProcessFeeders(sCubeName);
#endregion