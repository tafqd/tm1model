#region Prolog

#****Begin: Generated Statements***
#****End: Generated Statements****

#LASTCHANGE Inel Peacock, 2014-09-26, Updated to include a base version parameter to account for no default planning version being set
#LASTCHANGE Inel Botha, 2014-06-06, Documented the process
#GENERALCOMMENT This process updates the comparative versions for planning and reporting templates
#DATASOURCECOMMENT N/A
#PROLOGCOMMENT  Updates the Assumptions cube to reflect input value by user and then updates the applicable subsets 
#METADATACOMMENT N/A
#DATACOMMENT N/A
#EPILOGCOMMENT N/A


##########################################################
## Define variables                                                                                                   ##
##########################################################

sDim = 'Version' ;
sCube = 'Assumptions' ; 

# ONLY UPDATE THE CORRESPONDING SUBSET FOR THE VERSION
IF(pType @= 'Reporting');
   sAssump = 'Comparative reporting version' ;
   sSub = 'Reporting comparative version' ;
ELSEIF (pType @= 'Planning');
   sAssump = 'Comparative planning version' ;
   sSub = pBaseVersion | ' comparative version' ;
ENDIF;

##########################################################
## Update the Assumptions cube                                                                             ##
##########################################################

CellPutS (pComparativeVersion, sCube, 'No Version', 'No Period', 'No Entity', 'No Currency', sAssump, 'String');

##########################################################
## Create / update the appropriate subset                                                                ##
##########################################################

# IF SUBSET DOESN'T EXIST, CREATE IT 
IF (SubsetExists (sDim, sSub) = 0);
   SubsetCreate (sDim, sSub) ;
ENDIF;

# CLEAR EXISTING ELEMENTS FROM THE SUBSET 
IF ( SubsetGetSize (sDim, sSub) >0);
   SubsetDeleteAllElements (sDim, sSub);
ENDIF;

SubsetElementInsert (sDim, sSub, pComparativeVersion, 1);
#endregion
#region Metadata

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Data

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Epilog

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion