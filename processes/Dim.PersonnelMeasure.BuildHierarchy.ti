#region Prolog

#****Begin: Generated Statements***
#****End: Generated Statements****

#LASTCHANGE Inel Peacock, 2015-04-10, clear out and populate 'Source Cube' attribute on Account dimension to reflect 'Personnel'
#LASTCHANGE Inel Peacock, 2015-04-01, Set process up for Personnel Measure dimension
#GENERALCOMMENT Builds the account grouping hierarchies in the Personnel Measure dimension for feeding rule purposes
#DATASOURCECOMMENT N/A
#PROLOGCOMMENT Loops through all N-level Personnel Measures, checks if it has a value for the account attribute and if so, adds the asset class to the approrpiate consolidation
#METADATACOMMENT N/A
#DATACOMMENT N/A
#EPILOGCOMMENT N/A 

##########################################################
## Define variables                                                                                                   ##
##########################################################
sCubeName = 'Personnel' ;
sAttrCubeName = '}ElementAttributes_Account' ;

sDim = 'Personnel Measure';
sAcctDim = 'Account' ;
sAttrDim = '}ElementAttributes_' | sDim ;
sAcctAttrDim = '}ElementAttributes_Account' ;
sGLAcctsConsol = 'GL Accounts' ;

sPLAttr = 'Source cube' ;

sPersMeasSub = 'SYS.All Measures' ;
sAttrSub = 'SYS.Hierarchies' ;
sAttrMDX = '{TM1FILTERBYPATTERN( {TM1SUBSETALL( [' | sAttrDim | '] )}, "*Hierarchy*")}' ;
sAcctSub = 'SYS.Personnel Source Cube' ;
sAcctSubMDX = '{FILTER( {TM1SUBSETALL( [Account] )}, [Account].[Source cube] = "Personnel")}' ;

sProcess = '}CTK_DisconnectConsolidations';
sClearProcess = '}CTK_ViewCall' ;
sPLAccountProcess = 'Dim.PLAccount.Update' ;
sOpt = 'Zero' ;

##########################################################
## Confirm top consolidation exists                                                                            ##
##########################################################
If (DimIx (sDim, sGLAcctsConsol) = 0) ;
   DimensionElementInsert (sDim, '', sGLAcctsConsol, 'C');
EndIf;

##########################################################
## Create subset of attributes to reference                                                                ##
##########################################################
If (SubsetExists (sAttrDim, sAttrSub) = 1);
   SubsetDestroy (sAttrDim, sAttrSub) ;
   SubsetCreateByMDX (sAttrSub, sAttrMDX);
Else;
   SubsetCreateByMDX (sAttrSub, sAttrMDX);
EndIf ;

###########################################################################
## Clear out 'Source cube' attribute on Account dimension for accounts currently reflected as 'Personnel'      ##
###########################################################################
If (SubsetExists (sAcctDim, sAcctSub) = 0) ;
   SubsetCreateByMDX (sAcctSub, sAcctSubMDX) ;
EndIf;

sStr = sAttrCubeName | ',' | sAcctDim | ',' | sAcctSub | ',' | sAcctAttrDim | ',' | sPLAttr ;
ExecuteProcess (sClearProcess, 'pOpt', sOpt, 'pStr', sStr) ;

############################################################################
## Loop through attributes and all personnel measures to add measure to appropriate account consolidations  ##
## Automatically update the 'Source Cube' attribute on the Account dimension to reflect 'Personnel'                 ##
############################################################################

nAttrSubSize = SubsetGetSize (sAttrDim, sAttrSub) ;
x = 1 ;

# Add Hierarchy
While (x <= nAttrSubSize);
   sAcctType = SubsetGetElementName (sAttrDim, sAttrSub, x) ;
   sAcctConsol = Subst (sAcctType, Scan ('_', sAcctType) +1, Long (sAcctType)-Scan ('_', sAcctType)+1 ) | 's' ;
     If (Dimix (sDim, sAcctConsol) =0 );
        DimensionElementInsertDirect(sDim, '', sAcctConsol, 'C') ;
     Else;
        # Disconnect Accounts under "GL Accounts"
        z = 1;
        nChildren = ElCompN (sDim, sAcctConsol) ;
        While (z <= nChildren) ;
          sChild = ElComp (sDim, sAcctConsol, 1) ;
          DimensionElementDeleteDirect (sDim, sChild) ;
         z = z+1 ;
       End ;
     EndIf;

    # Then loop through each personnel measure and get the mapped GL Account
     y = 1 ;
     nMeasures = SubsetGetSize (sDim, sPersMeasSub);
     While ( y <= nMeasures) ;
        sPersMeas = SubsetGetElementName (sDim, sPersMeasSub, y) ;
        sMappedAcct = Attrs (sDim, sPersMeas, sAcctType);

        If(sMappedAcct @<> '');

          If (Dimix (sDim, sMappedAcct) = 0 );
            DimensionElementInsertDirect(sDim, '', sMappedAcct, 'C' );
          EndIf;

          DimensionElementComponentAddDirect(sDim, sMappedAcct, sPersMeas,1) ;
          DimensionElementComponentAddDirect(sDim, sAcctConsol, sMappedAcct, 1);

          #Populate 'Source Cube' attribute on Account dimension with 'Personnel' for these accounts
          If (Dimix (sAcctDim, sMappedAcct)<>0) ;
            AttrPutS (sCubeName, sAcctDim, sMappedAcct, sPLAttr) ;
          EndIf ;

        EndIf;

        y = y + 1 ;
     End;

   x = x + 1;
End ;

#endregion
#region Metadata

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Data

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Epilog

#****Begin: Generated Statements***
#****End: Generated Statements****

#Reprocess Feeders for the Personnel cube
CubeProcessFeeders(sCubeName);

#Replicate updated Source Cube attribute to PL Account dim
ExecuteProcess (sPLAccountProcess) ;
#endregion