#region Prolog

#****Begin: Generated Statements***
#****End: Generated Statements****

#LASTCHANGE Louise Davenport 27-May-2014 Clean up
#LASTCHANGE Peter Currie Initial Draft of process
#GENERALCOMMENT Update Project Dimension
#DATASOURCECOMMENT CSV
#PROLOGCOMMENT Update Project Dimension
#METADATACOMMENT N/A
#DATACOMMENT N/A
#EPILOGCOMMENT N/A

##################################
## Set Constants and Variables                         ##
##################################
cDimName = 'Project';

sCodeDescAttr = 'Code and Description';
sDescCodeAttr = 'Description and Code';
sDescAttr = 'Description';

sBIPromptAttr = 'PromptValue' ;

sAllConsol = cDimName | ' Consolidations';
sRepConsol = 'Reporting';
sSysConsol = 'System';
sTopConsol =  'All Projects';
sUnspecCC = 'Unspec Project';
sNoCC = 'No Project';
sToAllocate = 'All ' | cDimName |' Codes';

# Hierarchy Attibutes required
s_WeightPrefix = 'Weight_';
s_HierarchyPrefix = 'Hierarchy_';

s_TopHierarchyAttr = s_HierarchyPrefix | sTopConsol;
s_TopWeightAttr = s_WeightPrefix | sTopConsol;


#########################################################
## Disable cube logging for bulk data loads - performance improvements              ##
#########################################################
cCube = '}ElementAttributes_Project';
cCubeLogging = CubeGetLogChanges(cCube);
CubeSetLogChanges(cCube, 0);


##################################
## Unwind to be allocated Consolidation          ##
##################################
If(DimIx(cDimName, sToAllocate) > 0);
  sProcessName = '}CTK_DisconnectConsolidations';
  ExecuteProcess(sProcessName, 'pDimName', cDimName, 'pConsolidation', sToAllocate);
EndIf;

#ProcessQuit;

##########################################
## Insert Attributes                                                               ##
##########################################
# Generic Attributes - Code & Description etc
sProcessName = '}CTK_CreateAttributes';
ExecuteProcess(sProcessName,'pDimName',cDimName);

# Insert Hierarchy Attributes Required
AttrInsert(cDimName,'', s_TopHierarchyAttr,'S');
AttrInsert(cDimName,'', s_TopWeightAttr,'N');

# Insert attribute to filter BI prompt values
AttrInsert(cDimName,'',sBIPromptAttr,'N');

###########################################
## Insert System / Top level Elements                                   ##
###########################################
DimensionElementInsertDirect(cDimName,'',sAllConsol,'C');
DimensionElementInsertDirect(cDimName,'',sRepConsol,'C');
DimensionElementInsertDirect(cDimName,'',sSysConsol,'C');

DimensionElementComponentAddDirect(cDimName,sAllConsol,sRepConsol,1);
DimensionElementComponentAddDirect(cDimName,sAllConsol,sSysConsol,1);

DimensionElementInsertDirect(cDimName,'',sTopConsol,'C');
DimensionElementComponentAddDirect(cDimName,sRepConsol,sTopConsol,0);

DimensionElementInsertDirect(cDimName,'',sUnspecCC,'N');

DimensionElementInsertDirect(cDimName,'',sNoCC,'N');
DimensionElementComponentAddDirect(cDimName,sSysConsol,sNoCC,1);

DimensionElementInsertDirect(cDimName,'',sToAllocate,'C');
DimensionElementComponentAddDirect(cDimName,sSysConsol,sToAllocate,1);

DimensionElementComponentAddDirect(cDimName,sToAllocate,sUnspecCC,1);
#endregion
#region Metadata

#****Begin: Generated Statements***
#****End: Generated Statements****

###############################
## Set variables                                          ##
###############################
sProject = vProject;

######################################
## Insert Element and connnect to parent                  ##
######################################
If(DimIx(cDimName, sProject) = 0);
  DimensionElementInsert(cDimName,'',sProject,'N');
EndIf;
DimensionElementComponentAdd(cDimName,sToAllocate,sProject,1);
#endregion
#region Data

#****Begin: Generated Statements***
#****End: Generated Statements****

################################
## Set variables                                            ##
################################
sProject = vProject;
sProject_Alias = vProjectAlias;

sCodeDesc = sProject | ' - ' | sProject_Alias;
sDescCode = sProject_Alias | ' - ' | sProject;
sDesc = sProject_Alias;


#################################
## Insert Attributes                                          ##
#################################
# Generic Aliases etc
AttrPutS(sCodeDesc, cDimName, sProject, sCodeDescAttr);
AttrPutS(sDescCode, cDimName, sProject, sDescCodeAttr);
AttrPutS(sDesc, cDimName, sProject, sDescAttr);

# Hierarchy Attributes
AttrPutS(sRepConsol , cDimName, sTopConsol, s_TopHierarchyAttr);
AttrPutN(0, cDimName, sTopConsol, s_TopWeightAttr);
#endregion
#region Epilog

#****Begin: Generated Statements***
#****End: Generated Statements****

################################
## Rebuild Hierarchy                                    ##
################################
sProcessName = 'Dim.Generic.Hierarchy';
ExecuteProcess(sProcessName,'pDimName',cDimName, 'pHierarchy', s_TopHierarchyAttr);


################################
## Delete any empty consolidations             ##
################################
sProcessName = '}CTK_EmptyConsolidationsDelete';
ExecuteProcess(sProcessName,'pDimName',cDimName);


###########################################################
## Check for Orphan elements and add them to a orphan elements consolidation      ##
###########################################################
sProcessName = '}CTK_CheckOrphanElements';
ExecuteProcess(sProcessName,'pDimName',cDimName);


################################
## Set cube logging to original value            ##
################################
CubeSetLogChanges(cCube, cCubeLogging);
#endregion