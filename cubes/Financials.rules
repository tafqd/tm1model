#Region System
FEEDSTRINGS;
SKIPCHECK;
#EndRegion

#Region Variance calculations
#Name Calculate values for variance consolidations
#Desc Calculate values for the variance consolidations
#Date June-2014
#Author Inel Botha
#Group Financials Rules
[]=C:
	IF(ELISANC('Version','Variances',!Version)=1 & DTYPE('Version',!Version)@='C',
		IF(AttrS('Account', !Account, 'SYSTEMDebitCredit')@='DR',
			DB ('Financials', ELCOMP('Version', !Version, 2),!Period, !Entity, !Cost Centre, !Project, !Currency, !Report Type, !Account, !Financial Measure)-
			DB ('Financials', ELCOMP('Version', !Version, 1),!Period, !Entity, !Cost Centre, !Project, !Currency, !Report Type, !Account, !Financial Measure),
			DB ('Financials', ELCOMP('Version', !Version, 1),!Period, !Entity, !Cost Centre, !Project, !Currency, !Report Type, !Account, !Financial Measure)-
			DB ('Financials', ELCOMP('Version', !Version, 2),!Period, !Entity, !Cost Centre, !Project, !Currency, !Report Type, !Account, !Financial Measure)
		),
	CONTINUE);
#EndRegion

#Region Stet anything but Actuals and Dynamic
# Stet Versions that are not dynamic
[]=N:
	IF(ELISANC('Version', 'Dynamic Versions and Actual',!Version)=0,
		STET,
	CONTINUE);
#EndRegion

#Region BI Reporting
#Name Month contains actuals flag
#Desc Used to determine which months contain actuals in the BI Financials reports
#Date June-2014
#Author Inel Botha
#Group BI Rules
['No Entity','No Cost Centre','No Project','No Currency','Local','Account':'Month contains actuals','Amount']=N:
	IF (DB('Assumptions',!Version,!Period,'No Entity', 'No Currency', 'Month Contains Actuals','Value')=1,
		1 ,
		CONTINUE
	);

#EndRegion

#Region Cashflow
#Name Cashflow Rules
#Desc Calculate Opening Cash for Cashflow
#Date April-2014
#Author Louise Davenport
#Group STET Rules
#Opening Cash
['Opening Cash','Amount'] = N:
	IF(Subst(!Period,6,2) @<> '01',
		DB('Financials',!Version,ATTRS('Period',!Period,'Previous Period'),!Entity,!CostCentre,!Project,!Currency,!ReportType,'Closing Cash','Total Amount'),
		DB('Financials',!Version,SUBST(!Period,1,5)|'00',!Entity,!CostCentre,!Project,!Currency,!ReportType,'Cash Movement','Total Amount'));
# Remove Opening Balance for Balance Sheet lines for Cashflow
['CF Adjustment'] = N:
	IF(ELISANC('Account','Balance Sheet',!Account) = 1 & Subst(!Period,6,2) @= '00',
		['Total Amount'] *-1,
	CONTINUE);
# Cashflow Opening Balances
# For Consolidated Periods use the First Period Attributes
['Opening Cash'] = C:
	If(DTYPE('Period',!Period) @= 'C',
	  DB('Financials',!Version, ATTRS('Period',!Period,'First Period'),!Entity,!CostCentre,!Project,!Currency,!ReportType,!Account,!FinancialMeasure),
	CONTINUE);
# For Consolidated Periods use the Last Period Attributes
['Closing Cash'] = C:
	If(DTYPE('Period',!Period) @= 'C',
	  DB('Financials',!Version, ATTRS('Period',!Period,'Last Period'),!Entity,!CostCentre,!Project,!Currency,!ReportType,!Account,!FinancialMeasure),
	CONTINUE);
#EndRegion

#Region STETS
#Name STETS
#Desc STET rules from applying to certain periods etc
#Date April-2014
#Author Louise Davenport
#Group STET Rules
# Stet Versions that are not dynamic
[]=N:
	IF(ELISANC('Version', 'Dynamic Versions',!Version)=0,
		STET,
	CONTINUE);
# Stet Actual Months
[]=N:
	IF(DB('Assumptions',!Version,!Period,'No Entity','No Currency','Month Contains Actuals','Value')=1,
		STET,
	CONTINUE);

#Name STET Years outside of the base year and end year - use 'Working Forecast Years' & 'Working Budget Years' consols
#Desc Limits rules to Only years within the Base Year to End Year range for the version
#Date 20/05/2014
#Author Louise Davenport
[] = N:
IF (ELISANC('Period', !Version|' Years', SUBST(!Period,1,4)|'.FY') = 0,
	STET,
Continue);

# Stet Any rules on P&L as this should be done in PL Cube except Interest and Tax
[]=N:
	IF(ELISANC('Account','Profit and Loss',!Account) =1,
		IF(AttrS('Account', !Account,'Type') @<> 'TAX' & AttrS('Account', !Account,'Type') @<> 'INT',
			STET,
		CONTINUE),
	CONTINUE);

#EndRegion

#Region Opening Balance Calculations
#Name Calculate Opening Balances
#Desc Calculate Opening Balances
#Date April-2014
#Author Louise Davenport
#Group BS Rules
# Stet Opening Balance where at least one period contains actuals (as should also therefore contain actuals)
['Local','Amount']=N:
  IF(Subst(!Period,6,2) @= '00' &
  DB('Assumptions',!Version,Subst(!Period,1,4)|'.FY','No Entity','No Currency','Month Contains Actuals','Value')>0,
    STET,
  CONTINUE);

# Stet Current Years earnings Opening Balance
['Local','Amount']=N:
  IF(Subst(!Period,6,2) @= '00' &
   AttrS('Account', !Account, 'Type') @= 'CY',
    STET,
  CONTINUE);
# Populate Retained Earnings with from Prior year - into Unspec CostCentre
['Unspec Cost Centre','Local','Amount']=N:
	  IF(Subst(!Period,6,2) @= '00',
	    IF(AttrS('Account', !Account, 'Type') @= 'RE',
                        IF(DB('Assumptions',!Version,SUBST(!Period,1,4)|'.Input','No Entity','No Currency','Opening Balance Version','String') @= '',
	 		DB('Financials',!Version,STR(NUMBR(SUBST(!Period,1,4))-1,4,0)|'.13.LTD',!Entity,'All Cost Centres',!Project,!Currency,!ReportType,!Account,'Total Amount')+
			DB('Financials',!Version,STR(NUMBR(SUBST(!Period,1,4))-1,4,0)|'.13.LTD',!Entity,'All Cost Centres',!Project,!Currency,!ReportType,
			AttrS('Account', !Account, 'Related Account'),'Total Amount'),
	 		DB('Financials',DB('Assumptions',!Version,SUBST(!Period,1,4)|'.Input','No Entity','No Currency','Opening Balance Version','String'),
                                                     STR(NUMBR(SUBST(!Period,1,4))-1,4,0)|'.13.LTD',!Entity,'All Cost Centres',!Project,!Currency,!ReportType,!Account,'Total Amount')+
			DB('Financials',DB('Assumptions',!Version,SUBST(!Period,1,4)|'.Input','No Entity','No Currency','Opening Balance Version','String'),
                                                     STR(NUMBR(SUBST(!Period,1,4))-1,4,0)|'.13.LTD',!Entity,'All Cost Centres',!Project,!Currency,!ReportType,AttrS('Account', !Account, 'Related Account'),'Total Amount')),
		CONTINUE),
	CONTINUE);

# Populate Dynamic Version BS Opening Balance with Previous year's balances - note will need to change from YTD to LTD
['Local','Amount']=N:
	IF(Subst(!Period,6,2) @= '00',
		IF(ELISANC('Account','Balance Sheet',!Account)= 1,
                                  IF(DB('Assumptions',!Version,SUBST(!Period,1,4)|'.Input','No Entity','No Currency','Opening Balance Version','String') @= '',
			DB('Financials',!Version,STR(NUMBR(SUBST(!Period,1,4))-1,4,0)|'.13.LTD',!Entity,!CostCentre,!Project,!Currency,!ReportType,!Account,'Total Amount'),
			DB('Financials',DB('Assumptions',!Version,SUBST(!Period,1,4)|'.Input','No Entity','No Currency','Opening Balance Version','String'),
                                                  STR(NUMBR(SUBST(!Period,1,4))-1,4,0)|'.13.LTD',!Entity,!CostCentre,!Project,!Currency,!ReportType,!Account,'Total Amount')),
		CONTINUE),
	CONTINUE);

#EndRegion


#Region Drivers
#Name Drivers
#Desc Populate Drivers for Internal Rules and from Capex cube
#Date June-2014
#Author Louise Davenport
#Group Financial Rules
#Capex - Driver = 7
['Amount'] = N:
	IF(Subst(!Period,6,6)@= 'Driver',
		IF(DB('Assumptions', !Version, 'No Period', 'No Entity', 'No Currency', 'Capex Model On', 'Value')> 0 &
			AttrS('Account', !Account, 'Source Cube')@= 'Capex',
			7,
		CONTINUE),
	CONTINUE);
# Internal Rule - Driver = 6
['Amount'] = N:
	IF(Subst(!Period,6,6)@= 'Driver',
		IF((ELISANC('Account', 'Balance Sheet', !Account) = 1 % AttrS('Account',!Account, 'Type') @= 'TAX' %
		 AttrS('Account',!Account, 'Type') @= 'INT') &
		AttrS('Account',!Account, 'Type') @<> '' & AttrS('Account',!Account, 'Type') @<> 'RET',
			6,
		CONTINUE),
	CONTINUE);
#Personnel - Driver = 8
['Amount'] = N:
	IF(Subst(!Period,6,6)@= 'Driver',
		IF(DB('Assumptions', !Version, 'No Period', 'No Entity', 'No Currency', 'Personnel Model On', 'Value')> 0 &
			AttrS('Account', !Account, 'Source Cube')@= 'Personnel',
			8,
		CONTINUE),
	CONTINUE);

# Make consolidations 0
['Amount']=C:
	IF(Subst(!Period,6,6)@= 'Driver',
		0,
	Continue);

# Stet rules on Annual, drivers etc
[]= IF(ELISANC('Period','All LTDs',!Period)=1,CONTINUE,STET);

#Name Driver Driver 7 - Capex
#Desc Pull from Capex cube if Capex Model turned on
#Date 16/06/2014
#Author Louise Davenport
#Group Driver
# Populate amount where above check is valid
['Amount'] = N:
IF(DB('Financials',!Version,Subst(!Period,1,4) | '.Driver',!Entity,!Cost Centre,!Project,!Currency,!Report Type,!Account,!FinancialMeasure) = 7,
	# Look at what consolidation the account is under in the AssetClass dimension to determine which treatment
	IF(ELISANC('Asset Class','Accum Depreciation Accounts',!Account) = 1,
		DB('Capex',!Version,!Period,!Entity,!Cost Centre,!Project,!Currency,!Report Type,!Account,'All Capex Lists','Depreciation')*-1,
		IF(ELISANC('Asset Class','Cost Accounts',!Account) = 1,
			DB('Capex',!Version,!Period,!Entity,!Cost Centre,!Project,!Currency,!Report Type,!Account,'All Capex Lists','Capitalised Amount'),
		IF(ELISANC('Asset Class','WIP Accounts',!Account) = 1,
			DB('Capex',!Version,!Period,!Entity,!Cost Centre,!Project,!Currency,!Report Type,!Account,'All Capex Lists','Work in Progress'),
		CONTINUE))),
Continue);

#Name Driver Driver 8 - Personnel
#Desc Pull from Personnel cube if Personnel Model turned on
#Date 16/06/2014
#Author Louise Davenport
#Group Driver
# Populate amount where above check is valid
['Amount'] = N:
IF(DB('Financials',!Version,Subst(!Period,1,4) | '.Driver',!Entity,!Cost Centre,!Project,!Currency,!Report Type,!Account,!FinancialMeasure) = 8,
	DB('Personnel',!Version,!Period,!Entity,!CostCentre,!Project,!Currency,!ReportType,'Total Employees', !Account),
Continue);

#EndRegion

#Region Conversion from Local to Group
#Name Calculate Group
#Desc Convert Local Numbers to Group Reporting Currency
#Date April-2014
#Author Louise Davenport
#Group Financial Rules
[ReportType:'Converted']= N:
	# Don't make them have to enter a 1 when there is only one currency and populate into the reporting Currency
	 IF(!Currency @= DB('Assumptions', 'No Version','No Period', 'No Entity', 'No Currency', 'Reporting Currency', 'String'),
		 ['Local'],
		 ['Local']
		 \ DB('Assumptions', !Version,!Period, 'No Entity', !Currency, 'Exchange Rate', 'Value')
	 );

[ReportType:'Group']= N:
	# Don't make them have to enter a 1 when there is only one currency and populate into the reporting Currency
	 IF(!Currency @= DB('Assumptions', 'No Version','No Period', 'No Entity', 'No Currency', 'Reporting Currency', 'String'),
		 ['All Currencies','Converted'],
	 CONTINUE);
#EndRegion


#Region Accounts Receivable Calculations
#Name Calculate Accounts Receivable
#Desc Calculate Accounts Receivable based on Basis Selected
#Date April-2014
#Author Louise Davenport
#Group BS Rules
# AR Modelling Selection = 0
['Local','Amount']=N:
	IF(AttrS('Account',!Account,'Type') @= 'AR',
	# Calculate based on AR Days (AR Modelling Selection = 0)
		IF(DB('Assumptions',!Version,SUBST(!Period,1,4)|'.Input','No Entity','No Currency','AR modelling selection','Value')=0,
			# Work out What Closing Balance should be
			# Work Out Average Daily Sales based on Current Month (could do a YTD thing...)
			(['SYS.ARSales','Total Amount']\ DB('Assumptions','No Version',!Period,'No Entity','No Currency','Days in Month', 'Value')*
			# Allow the Ability to be entity specific
			IF(DB('Assumptions',!Version,!Period,!Entity,'No Currency','AR Days', 'Value') = 0,
				DB('Assumptions',!Version,!Period,'No Entity','No Currency','AR Days', 'Value'),
			DB('Assumptions',!Version,!Period,!Entity,'No Currency','AR Days', 'Value')))-
			# Opening Balance
			DB('Financials',!Version,ATTRS('Period',!Period,'PreviousPeriod')|'.LTD',!Entity,!CostCentre,!Project,!Currency,!ReportType,!Account,!Financial Measure),
		CONTINUE),
	CONTINUE);
# AR Modelling Selection = 1
['Local','Amount']=N:
	IF(AttrS('Account',!Account,'Type') @= 'AR',
		# Otherwise Calculate based on % collected
		IF(DB('Assumptions',!Version,SUBST(!Period,1,4)|'.Input','No Entity','No Currency','AR modelling selection','Value')=1,
			# Sales for Current Period
			['SYS.ARSales','Total Amount']-
			# Calculate Amount of Sales collected for current period
			((['SYS.ARSales','Total Amount'] *
			# Allow it to be entity specific
			IF(DB('Assumptions',!Version,!Period,!Entity,'No Currency','AR - Total Collected', '%') = 0,
			DB('Assumptions',!Version,!Period,'No Entity','No Currency','AR - % Collected Current Month', '%'),
			DB('Assumptions',!Version,!Period,!Entity,'No Currency','AR - % Collected Current Month', '%')))+
			# Calculate Amount of Previous Mths Balance Collected
			(DB('Financials',!Version,ATTRS('Period',!Period,'PreviousPeriod')|'.LTD',!Entity,!CostCentre,!Project,!Currency,!ReportType,!Account,!Financial Measure)*
			# Allow it to be entity specific
			IF(DB('Assumptions',!Version,!Period,!Entity,'No Currency','AR - Total Collected', '%')=0,
				DB('Assumptions',!Version,!Period,'No Entity','No Currency','AR - % Collected Prior Month', '%'),
			DB('Assumptions',!Version,!Period,!Entity,'No Currency','AR - % Collected Prior Month', '%')))+
			# Calculate Amount of Previous Mth -2 Balance Collected
			(DB('Financials',!Version,ATTRS('Period',ATTRS('Period',!Period,'PreviousPeriod'),'PreviousPeriod')|'.LTD',!Entity,!CostCentre,!Project,!Currency,!ReportType,!Account,!Financial Measure)*
			# Allow it to be entity specific
			IF(DB('Assumptions',!Version,!Period,!Entity,'No Currency','AR - Total Collected', '%')=0,
				DB('Assumptions',!Version,!Period,'No Entity','No Currency','AR - % Collected Month-2', '%'),
			DB('Assumptions',!Version,!Period,!Entity,'No Currency','AR - % Collected Month-2', '%')))+

			# Calculate Amount of Previous Mth -3 Balance Collected
			(DB('Financials',!Version,ATTRS('Period',ATTRS('Period',ATTRS('Period',!Period,'PreviousPeriod'),'PreviousPeriod'),'PreviousPeriod')|'.LTD',!Entity,!CostCentre,!Project,!Currency,!ReportType,!Account,!Financial Measure)*
			# Allow it to be entity specific
			IF(DB('Assumptions',!Version,!Period,!Entity,'No Currency','AR - Total Collected', '%')=0,
				DB('Assumptions',!Version,!Period,'No Entity','No Currency','AR - % Collected Month-3', '%'),
			DB('Assumptions',!Version,!Period,!Entity,'No Currency','AR - % Collected Month-3', '%')))
			),
		CONTINUE),
	CONTINUE);
#EndRegion

#Region Accounts Payable Calculations
#Name Calculate Accounts Payable
#Desc Calculate Accounts Payable based on Basis Selected
#Date April-2014
#Author Louise Davenport
#Group BS Rules
# AP Selection 1 - based on days
['Local','Amount']=N:
	IF(AttrS('Account', !Account, 'Type') @= 'AP',
	# Calculate based on AP Days (AP Modelling Selection = 0)
		IF(DB('Assumptions',!Version,SUBST(!Period,1,4)|'.Input','No Entity','No Currency','AP modelling selection','Value')=0,
			# Work out What Closing Balance should be
			# Work Out Average Daily Sales based on Current Month (could do a YTD thing...)
			(['SYS.APExpense','Total Amount']\DB('Assumptions','No Version',!Period,'No Entity','No Currency','Days in Month', 'Value')*
			# Allow entity specific AP Days
			IF(DB('Assumptions',!Version,!Period,!Entity,'No Currency','AP Days', 'Value') = 0,
				DB('Assumptions',!Version,!Period,'No Entity','No Currency','AP Days', 'Value'),
			DB('Assumptions',!Version,!Period,!Entity,'No Currency','AP Days', 'Value')))-
			# Opening Balance
			DB('Financials',!Version,ATTRS('Period',!Period,'PreviousPeriod')|'.LTD',!Entity,!CostCentre,!Project,!Currency,!ReportType,!Account,!Financial Measure),
			CONTINUE),
	CONTINUE);
# Otherwise Calculate based on % Settled
['Local','Amount']=N:
	IF(AttrS('Account', !Account, 'Type') @= 'AP',
		IF(DB('Assumptions',!Version,SUBST(!Period,1,4)|'.Input','No Entity','No Currency','AP modelling selection','Value')=1,
			# Expenses for Current Period
			['SYS.APExpense','Total Amount']-
			# Calculate Amount of Expenses Settled for current period
			((['SYS.APExpense','Total Amount'] *
			# Allow Entity Specific Assumptions
			IF(DB('Assumptions',!Version,!Period,!Entity,'No Currency','AP - Total Settled', '%') = 0,
				DB('Assumptions',!Version,!Period,'No Entity','No Currency','AP - % Settled Current Month', '%'),
			DB('Assumptions',!Version,!Period,!Entity,'No Currency','AP - % Settled Current Month', '%')))+
			# Calculate Amount of Previous Mths Balance Collected
			(DB('Financials',!Version,ATTRS('Period',!Period,'PreviousPeriod')|'.LTD',!Entity,!CostCentre,!Project,!Currency,!ReportType,!Account,!Financial Measure)*
			# Allow Entity Specific Assumptions
			IF(DB('Assumptions',!Version,!Period,!Entity,'No Currency','AP - Total Settled', '%')=0,
				DB('Assumptions',!Version,!Period,'No Entity','No Currency','AP - % Settled Prior Month', '%'),
			DB('Assumptions',!Version,!Period,!Entity,'No Currency','AP - % Settled Prior Month', '%')))+
			# Calculate Amount of Previous Mths-2 Balance Collected
			(DB('Financials',!Version,ATTRS('Period',ATTRS('Period',!Period,'PreviousPeriod'),'PreviousPeriod')|'.LTD',!Entity,!CostCentre,!Project,!Currency,!ReportType,!Account,!Financial Measure)*
			# Allow Entity Specific Assumptions
			IF(DB('Assumptions',!Version,!Period,!Entity,'No Currency','AP - Total Settled', '%')=0,
				DB('Assumptions',!Version,!Period,'No Entity','No Currency','AP - % Settled Month-2', '%'),
			DB('Assumptions',!Version,!Period,!Entity,'No Currency','AP - % Settled Month-2', '%')))+
			# Calculate Amount of Previous Mths -3 Balance Collected
			(DB('Financials',!Version,ATTRS('Period',ATTRS('Period',ATTRS('Period',!Period,'PreviousPeriod'),'PreviousPeriod'),'PreviousPeriod')|'.LTD',!Entity,!CostCentre,!Project,!Currency,!ReportType,!Account,!Financial Measure)*
			# Allow Entity Specific Assumptions
			IF(DB('Assumptions',!Version,!Period,!Entity,'No Currency','AP - Total Settled', '%')=0,
				DB('Assumptions',!Version,!Period,'No Entity','No Currency','AP - % Settled Month-3', '%'),
			DB('Assumptions',!Version,!Period,!Entity,'No Currency','AP - % Settled Month-3', '%')))
		),
		CONTINUE),
	CONTINUE);
#EndRegion

#Region GST Calculations
#Name Calculate GST Payments
#Desc Calculate GST Movements
#Date April-2014
#Author Louise Davenport
#Group BS Rules
['Local','Amount']=N:
	IF(AttrS('Account', !Account, 'Type') @= 'GST',
		# GST Receipts for the Period
		(['SYS.ARSales','Total Amount']* DB('Assumptions',!Version,!Period,'No Entity','No Currency','GST Rate', '%'))-
		# GST Payments for the period
		(['SYS.APExpense','Total Amount'] * DB('Assumptions',!Version,!Period,'No Entity','No Currency','GST Rate', '%'))-
		# GST Paid for the period
		If(DB('Assumptions',!Version,!Period,'No Entity','No Currency','GST Payment Period', 'Value')=1,
			DB('Financials',!Version,ATTRS('Period',!Period,'PreviousPeriod')|'.LTD',!Entity,!CostCentre,!Project,!Currency,!ReportType,!Account,!Financial Measure),
		0),
	CONTINUE);
#EndRegion

#Region Tax Calculations
#Name Tax Expense
#Desc Calculate Tax Expense based on Tax Rate Assumption
#Date 20/05/2014
#Author Louise Davenport
['Amount'] = N:
	IF(AttrS('Account', !Account,'Type') @= 'TAX' & ELISANC('Account','Profit and Loss', !Account) = 1,
		IF(DB('Assumptions',!Version, !Period,!Entity,'No Currency', 'Tax Rate','%')<> 0,
			DB('Assumptions',!Version, !Period,!Entity,'No Currency', 'Tax Rate','%') *
			['Profit Before Tax'],
		DB('Assumptions',!Version, !Period,'No Entity','No Currency', 'Tax Rate','%') *
			['Profit Before Tax']),
	CONTINUE);

#Name Calculate Tax Payments
#Desc Calculate Tax Movements
#Date April-2014
#Author Louise Davenport
#Group BS Rules
['Local','Amount']=N:
	IF(AttrS('Account', !Account, 'Type') @= 'TAX' & ELISANC('Account','Balance Sheet', !Account) = 1,
		# Tax Expense for the Period
		DB('Financials',!Version,!Period,!Entity,!CostCentre,!Project,!Currency,!ReportType,
		AttrS('Account',!Account,'Related Account'),'Total Amount')-
		# Tax Paid for the period
		If(DB('Assumptions',!Version,!Period,'No Entity','No Currency','Tax Payment Period', 'Value')=1,
			DB('Financials',!Version,ATTRS('Period',!Period,'PreviousPeriod')|'.LTD',!Entity,!CostCentre,!Project,!Currency,!ReportType,!Account,!Financial Measure),
		0),
	CONTINUE);
#EndRegion

#Region Interest Expense
#Name Apply Interest Expense
#Desc Apply Interest Expense based on assumptions at currency level if entered otherwise No Currency level
#Date 20/05/2014
#Author Louise Davenport
['Amount'] = N:
	IF(AttrS('Account', !Account,'Type') @= 'INT' ,
		IF(DB('Financials', !Version, ATTRS('Period',!Period,'previous period')|'.LTD', !Entity, !Cost Centre, !Project, !Currency, !Report Type,
			ATTRS('Account',!Account,'Related Account'),'Total Amount') <> 0,
			IF(DB('Assumptions',!Version, !Period,'No Entity',!Currency, 'Interest Rate','%')<> 0,
				DB('Assumptions',!Version, !Period,'No Entity',!Currency, 'Interest Rate','%') *
				DB('Financials', !Version, ATTRS('Period',!Period,'previous period')|'.LTD', !Entity, !Cost Centre, !Project, !Currency, !Report Type,
				ATTRS('Account',!Account,'Related Account'),'Total Amount')\12,
			DB('Assumptions',!Version, !Period,'No Entity','No Currency', 'Interest Rate','%') *
			DB('Financials', !Version, ATTRS('Period',!Period,'previous period')|'.LTD', !Entity, !Cost Centre, !Project, !Currency, !Report Type,
			ATTRS('Account',!Account,'Related Account'),'Total Amount')\12),
		Continue),
	CONTINUE);
#EndRegion

#Region Current Year Earnings
#Name Populate Current Year Earnings
#Desc Populate Current Year Earnings with Net Profit After Tax
#Date April-2014
#Author Louise Davenport
#Group BS Rules
['Unspec CostCentre','Local','Amount']=N:
	IF(AttrS('Account', !Account, 'Type') @= 'CY',
	#!Account @= DB('Assumptions', 'No Version','Default Period','Unspec Entity','No Currency','Current Year Earnings Account', 'String'),
		['All CostCentres','Profit and Loss', 'Total Amount'],
	CONTINUE);
#EndRegion

#Region Accumulated Depreciation
#Name Populate Accumulated Depreciation
#Desc Populate Accumulated Depreciation with Depreciation Amounts if capex model off (above)
#Date April-2014
#Author Louise Davenport
#Group BS Rules
['Local','Amount']=N:
	IF(ATTRS('Account',!Account, 'Type') @= 'Depr' &
	DB('Financials',!Version,Subst(!Period,1,4) | '.Driver',!Entity,!Cost Centre,!Project,!Currency,!Report Type,!Account,!FinancialMeasure) <> 7,
		DB('Financials',!Version,!Period,!Entity,!CostCentre,!Project,!Currency,!Report Type,
		ATTRS('Account',!Account,'Related Account'),'Total Amount')*-1,
	CONTINUE);
#EndRegion

#Region Balance Balance Sheet
#Name Populate Bank or Debt with Balancing Amount
#Desc Populate Bank or Debt with Balancing Amount based on account specified in Assumptions Cube
#Date April-2014
#Author Louise Davenport
#Group BS Rules
['Local',{'Amount','Adjustment'}]=N:
	IF(AttrS('Account', !Account, 'Type') @= 'BAL',
                  	IF(AttrS('Account', !Account, 'SYSTEMDebitCredit')@='DR',
		    DB('Financials',!Version,!Period,!Entity,!CostCentre,!Project,!Currency,!Report Type,'SYS.BSBalance',!FinancialMeasure)*-1,
                                DB('Financials',!Version,!Period,!Entity,!CostCentre,!Project,!Currency,!Report Type,'SYS.BSBalance',!FinancialMeasure)),
	CONTINUE);
#EndRegion



FEEDERS;
#Region Feed Cashflow
#Name Feed Cashflow
#Desc Feed Cashflow
#Date April-2014
#Author Louise Davenport
#Group Feeders
# Feed Opening Cash - not sure if want to apply to more versions...
['Dynamic Versions and Actual', 'Cash Movement', 'Total Amount']=>
	DB('Financials',!Version, SUBST(!Period,1,5)|'01',!Entity,!CostCentre,!Project,!Currency,!ReportType,'Opening Cash','Amount');
['Dynamic Versions and Actual', 'Closing Cash', 'Total Amount']=>
	DB('Financials',!Version, ATTRS('Period',!Period,'nextperiod'),!Entity,!CostCentre,!Project,!Currency,!ReportType,'Opening Cash','Amount');
# Feed Cashflow Adjustment to Remove Opening Balances for BS Accounts
['Dynamic Versions and Actual', 'Balance Sheet', 'Total Amount']=>
		DB('Financials',!Version, SUBST(!Period,1,5)|'00',!Entity,!CostCentre,!Project,!Currency,!ReportType,!Account,'CF Adjustment');
#EndRegion

#Region Feed Conversion from Local to Group
#Name Feed Conversion from Local to Group
#Desc Feed Group from Local
#Date April-2014
#Author Louise Davenport
#Group Feeders
# Feed Group
['Dynamic Versions','Planning Years','All Currencies','Local']=>
	['Converted'];
['Dynamic Versions','Planning Years','All Currencies','Converted']=>
	DB('Financials',!Version,!Period,!Entity,!CostCentre,!Project,
	DB('Assumptions', 'No Version','No Period', 'No Entity', 'No Currency', 'Reporting Currency', 'String'),'Group',
	!Account,!Financial Measure);
#EndRegion

#Region Feed Opening Balances
#Name Feed Opening Balances
#Desc Feed Opening Balances from Actual Prior Year Balances
#Date April-2014
#Author Louise Davenport
#Group Feeders
# Feed prior year numbers of BS Accounts to Next Year Opening Balance
['Dynamic Versions and Actual','All LTDs', 'Local', 'Balance Sheet','Total Amount']=>
	DB('Financials','Dynamic Versions',STR(NUMBR(SUBST(!Period,1,4))+1,4,0)|'.00',!Entity,!CostCentre,!Project,!Currency,!ReportType,!Account,'Amount');
# Feed Prior Year P&L to Retained Earnings
['Dynamic Versions and Actual','All LTDs', 'All Cost Centres', 'Local', 'Profit and Loss', 'Total Amount']=>
	DB('Financials','Dynamic Versions',STR(NUMBR(SUBST(!Period,1,4))+1,4,0)|'.00',!Entity,'Unspec Cost Centre',!Project,!Currency,!ReportType,
	AttrS('Account',AttrS('Account', 'Profit and Loss','Related Account'),'Related Account'),'Amount');
#EndRegion

#Region Feed Balance Sheet Calculations
#Name Feed Balance Sheet Calculations
#Desc Feed Balance Sheet Calculations with Sales, Expenses and prior period balances
#Date April-2014
#Author Louise Davenport
#Group Feeders
# Feed AR
['Dynamic Versions','Planning Years', 'Local', 'SYS.ARSales', 'Total Amount']=>
	DB('Financials',!Version,!Period,!Entity,!CostCentre,!Project,!Currency,!ReportType,
	AttrS('Account','SYS.ARSales','Related Account'),'Amount');
# Feed from Previous Balance for all Accounts
['Dynamic Versions','All YTDs', 'Local','Balance Sheet', 'Total Amount']=>
	DB('Financials',!Version,ATTRS('Period',SUBST(!Period,1,7),'nextperiod'),!Entity,!CostCentre,!Project,!Currency,!ReportType,!Account,'Amount');
# Feed AP
['Dynamic Versions','Planning Years', 'Local', 'SYS.APExpense', 'Total Amount']=>
	DB('Financials',!Version,!Period,!Entity,!CostCentre,!Project,!Currency,!ReportType,
	AttrS('Account','SYS.APExpense','Related Account'),'Amount');
# Feed GST
['Dynamic Versions','Planning Years', 'Local', 'SYS.GST', 'Total Amount']=>
	DB('Financials',!Version,!Period,!Entity,!CostCentre,!Project,!Currency,!ReportType,
	AttrS('Account','SYS.GST','Related Account'),'Amount');
# Feed Tax, Accumulated Depreciation
['Dynamic Versions','Planning Years', 'Local', 'Profit and Loss', 'Total Amount']=>
	DB('Financials',!Version,!Period,!Entity,!CostCentre,!Project,!Currency,!ReportType,
	AttrS('Account',!Account,'Related Account'),'Amount');
# Feed Current Year Earnings
['Dynamic Versions','Planning Years', 'All Cost Centres', 'Local', 'Profit and Loss', 'Total Amount']=>
	DB('Financials',!Version,!Period,!Entity,'Unspec Cost Centre',!Project,!Currency,!ReportType,
	AttrS('Account','Profit and Loss','Related Account'),'Amount');
# Feed Balancing Account
['Dynamic Versions','Planning Years', 'Local', 'SYS.BSBalance', 'Total Amount']=>
	DB('Financials',!Version,!Period,!Entity,!CostCentre,!Project,!Currency,!ReportType,
	AttrS('Account','SYS.BSBalance','Related Account'),!FinancialMeasure);
#EndRegion