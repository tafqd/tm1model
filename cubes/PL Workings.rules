#Region System
FEEDSTRINGS;
SKIPCHECK;
#EndRegion

#Region STETS
#Name Dynamic version and actual limit
#Desc Limits subsequent rules to dynamic versions including Actual
#Date 20/05/2014
#Author Louise Davenport
#Group Rule Control
[] = N: IF (ELISANC('Version','Dynamic Versions and Actual',!Version)=1,CONTINUE,STET);


#Name Dynamic version limit
#Desc Limits subsequent rules to dynamic versions
#Date 20/05/2014
#Author Louise Davenport
[] = N: IF (ELISANC('Version','Dynamic Versions',!Version)=1,CONTINUE,STET);

#Name STET actual months
#Desc Limits rules to all months that have not been actualised. Actuals are populated by a Turbo Integrator process.
#Date 20/05/2014
#Author Louise Davenport
[] = N:
IF (DB('Assumptions',!Version,!Period,'No Entity','No Currency','Month Contains Actuals','Value') =1,
	STET,
Continue);
#EndRegion

#Region Currency Conversion
#Name Convert Currency to local currency
#Desc Convert all amounts planned in other currencies currencies to the local currency.
#Date 20/05/2014
#Author Louise Davenport
[ReportType:'Converted','Amount']= N:
	# Don't make them have to enter a 1 when there is only one currency and populate into the reporting Currency
	 IF(!Currency @= DB('Assumptions', 'No Version','No Period', 'No Entity', 'No Currency', 'Reporting Currency', 'String'),
		['Local'],
		['Local']
		 \ DB('Assumptions', !Version,!Period, 'No Entity', !Currency, 'Exchange Rate', 'Value')
	 );

[ReportType:'Group','Amount']= N:
	# Don't make them have to enter a 1 when there is only one currency and populate into the reporting Currency
	 IF(!Currency @= DB('Assumptions', 'No Version','No Period', 'No Entity', 'No Currency', 'Reporting Currency', 'String'),
		['All Currencies','Converted'],
	 CONTINUE);
#EndRegion

#Region Phasing
#Name Phasing drivers
#Desc Phase input amounts based on a driver
#Date 20/05/2014
#Author Michael Mackie
[ReportType:'Local','Amount'] = N:
	IF(ELISANC('Period','All FYs',!Period)=1,CONTINUE
	,STET);

##Last Year
# Autobalancing
[ReportType:'Local','Amount'] = N:
	IF(DB('PL Workings',!Version, SUBST(!Period,1,4) | '.Input', !Entity, !Cost Centre, !Project, !Currency, !Report Type, !PL Account, !PL Line, 'Driver') @='Last Year',
		# If Auto Balancing then
		If(DB('Assumptions', !Version, 'No Period', 'No Entity', 'No Currency', 'Phasing Auto Balance', 'Value')> 0,
			DB('PL',!Version,ATTRS('Period',!Period,'Previous Year') | SUBST(!Period,5,3),!Entity, !Cost Centre, !Project, !Currency, !Report Type, !PL Account,!PL Workings Measure)
			 \
			DB('PL',!Version,ELCOMP('Period',ATTRS('Period',!Period,'Previous Year') | '.YTG',DB('Assumptions',!Version,SUBST(!Period,1,4)|'.FY','No Entity','No Currency','Month Contains Actuals','Value')),!Entity, !Cost Centre, !Project, !Currency, !Report Type, !PL Account,!PL Workings Measure)
			*
		# Find out amount remaining for the year
		(DB('PL Workings',!Version,SUBST(!Period,1,4) | '.Input', !Entity, !Cost Centre, !Project, !Currency, !Report Type, !PL Account, !PL Line,!PL Workings Measure)-
		DB('PL Workings',!Version,ELCOMP('Period',SUBST(!Period,1,4) | '.YTD',DB('Assumptions',!Version,SUBST(!Period,1,4)|'.FY','No Entity','No Currency','Month Contains Actuals','Value')),
			!Entity, !Cost Centre, !Project, !Currency, !Report Type, !PL Account, !PL Line,!PL Workings Measure)),
		Continue)
	,CONTINUE);
# Last Year Non Auto Balancing
[ReportType:'Local','Amount'] = N:
	IF(DB('PL Workings',!Version, SUBST(!Period,1,4) | '.Input', !Entity, !Cost Centre, !Project, !Currency, !Report Type, !PL Account, !PL Line, 'Driver') @='Last Year',
			DB('PL',!Version,ATTRS('Period',!Period,'Previous Year') | SUBST(!Period,5,3),!Entity, !Cost Centre, !Project, !Currency, !Report Type, !PL Account,!PL Workings Measure)
			 \
			DB('PL',!Version,ATTRS('Period',!Period,'Previous Year') | '.FY',!Entity, !Cost Centre, !Project, !Currency, !Report Type, !PL Account,!PL Workings Measure)
			*
		# Determine whether Auto-balance to full year amount or not
		DB('PL Workings',!Version,SUBST(!Period,1,4) | '.Input', !Entity, !Cost Centre, !Project, !Currency, !Report Type, !PL Account, !PL Line,!PL Workings Measure)
	,CONTINUE);

#Phasing Profiles
# Look to see if a version specific profile otherwise use No Version
[ReportType:'Local','Amount'] = N:
	IF(DB('PL Workings',!Version, SUBST(!Period,1,4) | '.Input', !Entity, !Cost Centre, !Project, !Currency, !Report Type, !PL Account, !PL Line, 'Driver') @<>'',
		# If Auto Balancing then
		If(DB('Assumptions', !Version, 'No Period', 'No Entity', 'No Currency', 'Phasing Auto Balance', 'Value')> 0,
			  If(db('Phasing Profiles', !Version, SUBST(!Period,1,4)|'.FY',
				DB('PL Workings',!Version,SUBST(!Period,1,4) | '.Input',!Entity, !Cost Centre, !Project, !Currency, !Report Type, !PL Account, !PL Line, 'Driver')
				,'Value')<> 0,
			# Use proportions based on YTG
			db('Phasing Profiles', !Version, !Period,
			DB('PL Workings',!Version,SUBST(!Period,1,4) | '.Input',!Entity, !Cost Centre, !Project, !Currency, !Report Type, !PL Account, !PL Line, 'Driver')
			,'Value')\
			 db('Phasing Profiles', !Version, ELCOMP('Period',SUBST(!Period,1,4) | '.YTG',DB('Assumptions',!Version,SUBST(!Period,1,4)|'.FY','No Entity','No Currency','Month Contains Actuals','Value')),
			DB('PL Workings',!Version,SUBST(!Period,1,4) | '.Input',!Entity, !Cost Centre, !Project, !Currency, !Report Type, !PL Account, !PL Line, 'Driver')
			,'Value'),
			db('Phasing Profiles', 'No Version', !Period,
			DB('PL Workings',!Version,SUBST(!Period,1,4) | '.Input',!Entity, !Cost Centre, !Project, !Currency, !Report Type, !PL Account, !PL Line, 'Driver')
			,'Value')\
			db('Phasing Profiles', 'No Version', ELCOMP('Period',SUBST(!Period,1,4) | '.YTG',DB('Assumptions',!Version,SUBST(!Period,1,4)|'.FY','No Entity','No Currency','Month Contains Actuals','Value')),
			DB('PL Workings',!Version,SUBST(!Period,1,4) | '.Input',!Entity, !Cost Centre, !Project, !Currency, !Report Type, !PL Account, !PL Line, 'Driver')
			,'Value'))
		*
			(DB('PL Workings',!Version,SUBST(!Period,1,4) | '.Input', !Entity, !Cost Centre, !Project, !Currency, !Report Type, !PL Account, !PL Line,!PL Workings Measure) -
			DB('PL Workings',!Version,ELCOMP('Period',SUBST(!Period,1,4) | '.YTD',DB('Assumptions',!Version,SUBST(!Period,1,4)|'.FY','No Entity','No Currency','Month Contains Actuals','Value')),
			!Entity, !Cost Centre, !Project, !Currency, !Report Type, !PL Account, !PL Line,!PL Workings Measure)),
		Continue)
	,Continue);
# If Not Autobalancing
[ReportType:'Local','Amount'] = N:
	IF(DB('PL Workings',!Version, SUBST(!Period,1,4) | '.Input', !Entity, !Cost Centre, !Project, !Currency, !Report Type, !PL Account, !PL Line, 'Driver') @<>'',
		If(db('Phasing Profiles', !Version, SUBST(!Period,1,4)|'.FY',
			DB('PL Workings',!Version,SUBST(!Period,1,4) | '.Input',!Entity, !Cost Centre, !Project, !Currency, !Report Type, !PL Account, !PL Line, 'Driver')
			,'Value')<> 0,
			db('Phasing Profiles', !Version, !Period,
			DB('PL Workings',!Version,SUBST(!Period,1,4) | '.Input',!Entity, !Cost Centre, !Project, !Currency, !Report Type, !PL Account, !PL Line, 'Driver')
			,'%') ,
			db('Phasing Profiles', 'No Version', !Period,
			DB('PL Workings',!Version,SUBST(!Period,1,4) | '.Input',!Entity, !Cost Centre, !Project, !Currency, !Report Type, !PL Account, !PL Line, 'Driver')
			,'%'))
		*
		DB('PL Workings',!Version,SUBST(!Period,1,4) | '.Input', !Entity, !Cost Centre, !Project, !Currency, !Report Type, !PL Account, !PL Line,!PL Workings Measure)
	,Continue);
# If not User Defined then look at "Default Phasing" attribute
[ReportType:'Local','Amount'] = N:
	IF(AttrS('PL Account', !PL Account, 'Default Phasing') @<>'',
		Continue
	,Stet);
[ReportType:'Local','Amount'] = N:
		IF(AttrS('PL Account', !PL Account, 'Default Phasing') @='Last Year',
		# If Auto Balancing then
			If(DB('Assumptions', !Version, 'No Period', 'No Entity', 'No Currency', 'Phasing Auto Balance', 'Value')> 0,
				DB('PL',!Version,ATTRS('Period',!Period,'Previous Year') | SUBST(!Period,5,3),!Entity, !Cost Centre, !Project, !Currency, !Report Type, !PL Account,!PL Workings Measure)
				 \
				DB('PL',!Version,ELCOMP('Period',ATTRS('Period',!Period,'Previous Year') | '.YTG',DB('Assumptions',!Version,SUBST(!Period,1,4)|'.FY','No Entity','No Currency','Month Contains Actuals','Value')),!Entity, !Cost Centre, !Project, !Currency, !Report Type, !PL Account,!PL Workings Measure)
				*
				# Find out amount remaining for the year
				(DB('PL Workings',!Version,SUBST(!Period,1,4) | '.Input', !Entity, !Cost Centre, !Project, !Currency, !Report Type, !PL Account, !PL Line,!PL Workings Measure)-
				DB('PL Workings',!Version,ELCOMP('Period',SUBST(!Period,1,4) | '.YTD',DB('Assumptions',!Version,SUBST(!Period,1,4)|'.FY','No Entity','No Currency','Month Contains Actuals','Value')),
				!Entity, !Cost Centre, !Project, !Currency, !Report Type, !PL Account, !PL Line,!PL Workings Measure)),
		# Last Year Non Auto Balancing
				DB('PL',!Version,ATTRS('Period',!Period,'Previous Year') | SUBST(!Period,5,3),!Entity, !Cost Centre, !Project, !Currency, !Report Type, !PL Account,!PL Workings Measure)
				 \
				DB('PL',!Version,ATTRS('Period',!Period,'Previous Year') | '.FY',!Entity, !Cost Centre, !Project, !Currency, !Report Type, !PL Account,!PL Workings Measure)
				*
			# Determine whether Auto-balance to full year amount or not
			DB('PL Workings',!Version,SUBST(!Period,1,4) | '.Input', !Entity, !Cost Centre, !Project, !Currency, !Report Type, !PL Account, !PL Line,!PL Workings Measure))
	,CONTINUE);

#Phasing Profiles
# Look to see if a version specific profile otherwise use No Version
[ReportType:'Local','Amount'] = N:
	# If Auto Balancing then
	If(DB('Assumptions', !Version, 'No Period', 'No Entity', 'No Currency', 'Phasing Auto Balance', 'Value')> 0,
		If(db('Phasing Profiles', !Version, SUBST(!Period,1,4)|'.FY', AttrS('PL Account', !PL Account, 'Default Phasing'),'Value')<> 0,
			# Use proportions based on YTG
			db('Phasing Profiles', !Version, !Period, AttrS('PL Account', !PL Account, 'Default Phasing'),'Value')\
			 db('Phasing Profiles', !Version, ELCOMP('Period',SUBST(!Period,1,4) | '.YTG',
			 DB('Assumptions',!Version,SUBST(!Period,1,4)|'.FY','No Entity','No Currency','Month Contains Actuals','Value')),
			AttrS('PL Account', !PL Account, 'Default Phasing'),'Value'),
			db('Phasing Profiles', 'No Version', !Period, AttrS('PL Account', !PL Account, 'Default Phasing'),'Value')\
			db('Phasing Profiles', 'No Version', ELCOMP('Period',SUBST(!Period,1,4) | '.YTG',DB('Assumptions',!Version,SUBST(!Period,1,4)|'.FY','No Entity','No Currency','Month Contains Actuals','Value')),
			AttrS('PL Account', !PL Account, 'Default Phasing'),'Value'))
		*
			(DB('PL Workings',!Version,SUBST(!Period,1,4) | '.Input', !Entity, !Cost Centre, !Project, !Currency, !Report Type, !PL Account, !PL Line,!PL Workings Measure) -
			DB('PL Workings',!Version,ELCOMP('Period',SUBST(!Period,1,4) | '.YTD',DB('Assumptions',!Version,SUBST(!Period,1,4)|'.FY','No Entity','No Currency','Month Contains Actuals','Value')),
			!Entity, !Cost Centre, !Project, !Currency, !Report Type, !PL Account, !PL Line,!PL Workings Measure)),
			# If Not Autobalancing
				If(db('Phasing Profiles', !Version, SUBST(!Period,1,4)|'.FY', AttrS('PL Account', !PL Account, 'Default Phasing'),'Value')<> 0,
			db('Phasing Profiles', !Version, !Period, AttrS('PL Account', !PL Account, 'Default Phasing'),'%') ,
			db('Phasing Profiles', 'No Version', !Period, AttrS('PL Account', !PL Account, 'Default Phasing'),'%'))
		*
		DB('PL Workings',!Version,SUBST(!Period,1,4) | '.Input', !Entity, !Cost Centre, !Project, !Currency, !Report Type, !PL Account, !PL Line,!PL Workings Measure));










#EndRegion

FEEDERS;
#Region Feeders

#Name Feed Report Type
#Desc Feed Reporting from Local
#Date 20/05/2014
#Author Louise Davenport
#Group Feeders
['Dynamic Versions','Planning Years','All Currencies','Local']=>
	['Converted'] ;
['Dynamic Versions','Planning Years','All Currencies','Converted']=>
	DB('PL Workings',!Version,!Period,!Entity,!CostCentre,!Project,
	DB('Assumptions', 'No Version','No Period', 'No Entity', 'No Currency', 'Reporting Currency', 'String'),'Group',
	!PLAccount,!Pl Line,!PL Workings Measure);

#Name Feed upstream to PL Cube
#Desc Feed PL Workings Detail numbers to PL Cube
#Date 20/05/2014
#Author Louise Davenport
['Dynamic Versions','Planning Years','Local','All Lines','Amount']=>
	DB('PL', !Version, !Period, !Entity, !Cost Centre, !Project, !Currency, !Report Type, !PL Account, 'Amount');
['Dynamic Versions', 'All FYs', 'Local','All Lines','Amount']=>
	DB('PL', !Version, Subst(!Period,1,4)|'.Driver', !Entity, !Cost Centre, !Project, !Currency, !Report Type, !PL Account, 'Amount');

#Name Feed Auto Phasing
#Desc Feed months when a phasing amount is specified
#Date 06/08/2014
#Author Michael Mackie
['Dynamic Versions','All Input','Local','Amount']=>
	db('PL Workings', !Version, SUBST(!Period,1,4) | '.FY', !Entity, !Cost Centre, !Project, !Currency, !Report Type, !PL Account, !PL Line, !PL Workings Measure);
#EndRegion