#Region System
FEEDSTRINGS;
SKIPCHECK;
#EndRegion

#Region STET Versions
#Name Stet Versions & Periods
#Desc Stet Rules from applying to various things
#Date June-2014
#Author Louise Davenport
#Group Stet Rules
#Stet anything but Dynamic Versions
[]=N:
IF(ELISANC('Version', 'Dynamic Versions',!Version)=0,
	STET,
CONTINUE);

#Name STET actual months
#Desc Limits rules to all months that have not been actualised. Actuals are populated by a Turbo Integrator process.
#Date 11/05/2014
#Author Michael Mackie
[] = N:
IF (DB('Assumptions',!Version,!Period,'No Entity','No Currency','Month Contains Actuals','Value') =1,
	STET,
Continue);
#EndRegion

#Region Turn model on / off
#Name Turn model on / off
#Desc Turn model on / off based on setup assumption
#Date November-2014
#Author Inel Peacock
#Group Stet Rules
[] = N:
IF (DB('Assumptions',!Version, 'No Period','No Entity','No Currency', 'Gross Margin Model On','String')@='Yes',
	Continue,
	STET) ;
#EndRegion

#Region Assumptions
#Name Assumptions
#Desc If assumptions are entered in GM Assumptions cube, pull through to Gross Margin cube to reflect in entry templates and reports
#Date November-2014
#Author Inel Peacock
#Group Rules
[{'Gross Margin %','Discount %','Rebate %','Unit Price'}] = N:
IF (DB ('Assumptions','No Version','No Period','No Entity','No Currency','GM '|!GM Measure|' via Assumptions','String')@='Yes',
	CONTINUE,
	STET
);

[{'Gross Margin %','Discount %','Rebate %','Unit Price'}] = N:
IF(Scan ('.Input',!Customer)=0,
	IF(DB('GM Assumptions',!Version, !Period,!Currency,!GM Classification,!Customer,!Product,!GM Measure) <> 0,
		DB('GM Assumptions',!Version, !Period,!Currency,!GM Classification,!Customer,!Product,!GM Measure),
		IF(DB('GM Assumptions',!Version, !Period,!Currency,!GM Classification,Attrs('Customer',!Customer,'Customer Category')|'.Input',!Product,!GM Measure)<>0,
			DB('GM Assumptions',!Version, !Period,!Currency,!GM Classification,Attrs('Customer',!Customer,'Customer Category')|'.Input',!Product,!GM Measure),
			CONTINUE
		)
	),
	Continue);

[{'Gross Margin %','Discount %','Rebate %','Unit Price'}] = N:
IF(Scan ('.Input',!Product)=0,
	IF(DB('GM Assumptions',!Version, !Period,!Currency,!GM Classification,!Customer,!Product,!GM Measure) <> 0,
		DB('GM Assumptions',!Version, !Period,!Currency,!GM Classification,!Customer,!Product,!GM Measure),
		IF(DB('GM Assumptions',!Version, !Period,!Currency,!GM Classification,!Customer,Attrs('Product',!Product,'Product Category')|'.Input',!GM Measure)<>0,
			DB('GM Assumptions',!Version, !Period,!Currency,!GM Classification,!Customer,Attrs('Product',!Product,'Product Category')|'.Input',!GM Measure),
			CONTINUE
		)
	),
	Continue);
#EndRegion

#Region Gross Revenue
#Name Gross Revenue
#Desc Calculates the Gross Revenue based on Sales units and unit price
#Date October-2014
#Author Campbell Claridge
#Group Rules
['Gross Revenue'] = N:
['Sales Units']*['Unit Price'] ;
#EndRegion

#Region Cost of Sales
#Name Cost of Sales
#Desc Calculates the Cost of Sales based on Unit Cost and the number of Sales Units
#Date October-2014
#Author Campbell Claridge
#Group Rules
['Cost of Sales'] = N:
['Gross Revenue']*(1-['Gross Margin %']);
#EndRegion

#Region Unit Cost
#Name Unit Cost
#Desc Calculates the Unit Cost based on Cost of Sales and the number of Sales Units
#Date November-2014
#Author Inel Peacock
#Group Rules
['Unit Cost'] = N:
['Cost of Sales'] \ ['Sales Units'] ;
#EndRegion

#Region Discount
#Name Discount
#Desc Calculates the Discount amount based on Gross Revenue
#Date November-2014
#Author Inel Peacock
#Group Rules
['Discount Amount'] = N:
['Discount %'] * ['Gross Revenue'] ;
#EndRegion

#Region Rebate
#Name Rebate
#Desc Calculates the Rebate amount based on Gross Revenue
#Date November-2014
#Author Inel Peacock
#Group Rules
['Rebate Amount'] = N:
['Rebate %']* ['Gross Revenue'] ;
#EndRegion

#Region C-Level rules
#Name C-Level rules
#Desc Calculate values for %'s at consolidated levels
#Date November-2014
#Author Inel Peacock
#Group Rules
['Gross Margin %'] = C:
['Gross Margin']\['Gross Revenue'] ;

['Discount %'] = C:
['Discount Amount']\['Gross Revenue'] ;

['Rebate %'] = C:
['Rebate Amount']\['Gross Revenue'] ;
#EndRegion

FEEDERS;
#Region Feeders

#Name Feed Calculations
#Desc Feed caluclations using Sales units
#Date November-2014
#Author Inel Peacock
#Group Feeders
['Sales Units'] =>
['Gross Revenue'],
['Cost of Sales'],
['Unit Cost'],
['Unit Price'],
['Discount Amount'],
['Rebate Amount'],
['Gross Margin %'],
['Discount %'],
['Rebate %'];

#Name Feed PL cube
#Desc Feed PL cube using Sales Units
#Date November-2014
#Author Inel Peacock
#Group Feeders
['Dynamic Versions', 'Planning Years','All Classifications','All Customers','All Products','Sales Units']=>
	DB('PL',!Version,!Period,!Entity,!Cost Centre,'All Projects',!Currency,!Report Type, ATTRS('GM Measure','Gross Revenue','GL Account'),'Amount'),
	DB('PL',!Version,!Period,!Entity,!Cost Centre,'All Projects',!Currency,!Report Type, ATTRS('GM Measure','Cost of Sales','GL Account'),'Amount');
#EndRegion